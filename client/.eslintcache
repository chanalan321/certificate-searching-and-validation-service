[{"C:\\Users\\alan\\fyp\\client\\src\\App.js":"1","C:\\Users\\alan\\fyp\\client\\src\\index.js":"2","C:\\Users\\alan\\fyp\\client\\src\\Main.js":"3","C:\\Users\\alan\\fyp\\client\\src\\Home.js":"4","C:\\Users\\alan\\fyp\\client\\src\\search.js":"5","C:\\Users\\alan\\fyp\\client\\src\\searchTabs.js":"6","C:\\Users\\alan\\fyp\\client\\src\\SearchTabs.js":"7","C:\\Users\\alan\\fyp\\client\\src\\Search.js":"8","C:\\Users\\alan\\fyp\\client\\src\\SearchResult.js":"9","C:\\Users\\alan\\fyp\\client\\src\\SearchResultDetail.js":"10","C:\\Users\\alan\\fyp\\client\\src\\Login.js":"11","C:\\Users\\alan\\fyp\\client\\src\\login.js":"12","C:\\Users\\alan\\fyp\\client\\src\\Admin.js":"13","C:\\Users\\alan\\fyp\\client\\src\\Worker.js":"14","C:\\Users\\alan\\fyp\\client\\src\\Orders.js":"15","C:\\Users\\alan\\fyp\\client\\src\\worker.js":"16","C:\\Users\\alan\\fyp\\client\\src\\CreateCertificate.js":"17","C:\\Users\\alan\\fyp\\client\\src\\worker_upperlistItems.js":"18","C:\\Users\\alan\\fyp\\client\\src\\worker_lowerlistItems.js":"19","C:\\Users\\alan\\fyp\\client\\src\\Worker_upperlistItems.js":"20","C:\\Users\\alan\\fyp\\client\\src\\Worker_lowerlistItems.js":"21","C:\\Users\\alan\\fyp\\client\\src\\CreateCertificate_component.js":"22","C:\\Users\\alan\\fyp\\client\\src\\ReviewingCertificate.js":"23","C:\\Users\\alan\\fyp\\client\\src\\ReviewingCertificate_component.js":"24","C:\\Users\\alan\\fyp\\client\\src\\ProblemCertificate.js":"25","C:\\Users\\alan\\fyp\\client\\src\\ProblemCertificate_component.js":"26","C:\\Users\\alan\\fyp\\client\\src\\Admin_lowerlistItems.js":"27","C:\\Users\\alan\\fyp\\client\\src\\Admin_upperlistItems.js":"28","C:\\Users\\alan\\fyp\\client\\src\\AuditCertificate.js":"29","C:\\Users\\alan\\fyp\\client\\src\\AuditCertificate_component.js":"30","C:\\Users\\alan\\fyp\\client\\src\\ModifiedCertificate.js":"31","C:\\Users\\alan\\fyp\\client\\src\\ModifiedCertificate_component.js":"32","C:\\Users\\alan\\fyp\\client\\src\\Worker_PublishedCertificate.js":"33","C:\\Users\\alan\\fyp\\client\\src\\Worker_PublishedCertificate_component.js":"34","C:\\Users\\alan\\fyp\\client\\src\\Admin_PublishedCertificate.js":"35","C:\\Users\\alan\\fyp\\client\\src\\Admin_PublishedCertificate_component.js":"36","C:\\Users\\alan\\fyp\\client\\src\\Index_Header.js":"37","C:\\Users\\alan\\fyp\\client\\src\\Index_Footer.js":"38","C:\\Users\\alan\\fyp\\client\\src\\Student.js":"39"},{"size":2084,"mtime":1618416668904,"results":"40","hashOfConfig":"41"},{"size":197,"mtime":1609501021822,"results":"42","hashOfConfig":"41"},{"size":205,"mtime":1609499691466,"results":"43","hashOfConfig":"41"},{"size":14604,"mtime":1618418253040,"results":"44","hashOfConfig":"41"},{"size":440,"mtime":1609614743412,"results":"45","hashOfConfig":"41"},{"size":10093,"mtime":1609625711650,"results":"46","hashOfConfig":"41"},{"size":5059,"mtime":1617134399324,"results":"47","hashOfConfig":"41"},{"size":4518,"mtime":1617022945649,"results":"48","hashOfConfig":"41"},{"size":5170,"mtime":1617134321516,"results":"49","hashOfConfig":"41"},{"size":21546,"mtime":1617134285615,"results":"50","hashOfConfig":"41"},{"size":5495,"mtime":1617272718101,"results":"51","hashOfConfig":"41"},{"size":3891,"mtime":1616435921996,"results":"52","hashOfConfig":"41"},{"size":6813,"mtime":1618319524050,"results":"53","hashOfConfig":"41"},{"size":6605,"mtime":1616528246678,"results":"54","hashOfConfig":"41"},{"size":2417,"mtime":1616492526567,"results":"55","hashOfConfig":"41"},{"size":6617,"mtime":1618416718988,"results":"56","hashOfConfig":"41"},{"size":6674,"mtime":1616933968375,"results":"57","hashOfConfig":"41"},{"size":2618,"mtime":1616528686088,"results":"58","hashOfConfig":"41"},{"size":1568,"mtime":1616528674029,"results":"59","hashOfConfig":"41"},{"size":2634,"mtime":1616596192020,"results":"60","hashOfConfig":"41"},{"size":3044,"mtime":1618416071055,"results":"61","hashOfConfig":"41"},{"size":7502,"mtime":1618416011063,"results":"62","hashOfConfig":"41"},{"size":6624,"mtime":1616933923462,"results":"63","hashOfConfig":"41"},{"size":4737,"mtime":1616935437849,"results":"64","hashOfConfig":"41"},{"size":6465,"mtime":1618411496217,"results":"65","hashOfConfig":"41"},{"size":15229,"mtime":1618411701369,"results":"66","hashOfConfig":"41"},{"size":2182,"mtime":1618417134466,"results":"67","hashOfConfig":"41"},{"size":2012,"mtime":1618417365904,"results":"68","hashOfConfig":"41"},{"size":6597,"mtime":1616934101941,"results":"69","hashOfConfig":"41"},{"size":16562,"mtime":1617278360441,"results":"70","hashOfConfig":"41"},{"size":6610,"mtime":1617019304129,"results":"71","hashOfConfig":"41"},{"size":16637,"mtime":1617282799782,"results":"72","hashOfConfig":"41"},{"size":6653,"mtime":1616933812305,"results":"73","hashOfConfig":"41"},{"size":14979,"mtime":1617283103714,"results":"74","hashOfConfig":"41"},{"size":6637,"mtime":1616934040185,"results":"75","hashOfConfig":"41"},{"size":15163,"mtime":1617283032108,"results":"76","hashOfConfig":"41"},{"size":2249,"mtime":1617022995748,"results":"77","hashOfConfig":"41"},{"size":2070,"mtime":1617016545156,"results":"78","hashOfConfig":"41"},{"size":23882,"mtime":1617282627995,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1mon1ad",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"84"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"84"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"84"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"84"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"84"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"84"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":29,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"84"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"84"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"84"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"84"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"84"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"84"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"84"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"84"},"C:\\Users\\alan\\fyp\\client\\src\\App.js",["182","183"],"C:\\Users\\alan\\fyp\\client\\src\\index.js",[],["184","185"],"C:\\Users\\alan\\fyp\\client\\src\\Main.js",[],"C:\\Users\\alan\\fyp\\client\\src\\Home.js",["186","187","188","189","190","191","192","193","194","195"],"C:\\Users\\alan\\fyp\\client\\src\\search.js",["196","197"],"import React from 'react';\r\nimport SearchTabs from './SearchTabs';\r\n\r\nclass Search extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <SearchTabs/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;",["198","199"],"C:\\Users\\alan\\fyp\\client\\src\\searchTabs.js",["200","201","202","203"],"C:\\Users\\alan\\fyp\\client\\src\\SearchTabs.js",["204","205"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          {children}\r\n          \r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function SearchTabs() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n  const [textData, setTextData] = React.useState(\"\");\r\n\r\n  const openFile = (event) => {\r\n    let status = \"\"; // Status output\r\n    const fileObj = event.target.files[0];\r\n    const reader = new FileReader();\r\n    console.log(\"hihihi \")\r\n    \r\n        \r\n    let fileloaded = e => {\r\n      // e.target.result is the file's content as text\r\n      const fileContents = e.target.result;\r\n      console.log(\"fileObj: \" + fileContents.length)\r\n      // Show first 80 characters of the file\r\n      const _id = fileContents.substring(466,490);\r\n      history.push({ \r\n        pathname: '/Search/SearchResult',\r\n            state: {\r\n              textData: _id,\r\n              searchType: \"3\"\r\n            }\r\n      })\r\n    }\r\n    \r\n    // Mainline of the method\r\n    fileloaded = fileloaded.bind(this);\r\n    reader.onload = fileloaded;\r\n    reader.readAsText(fileObj);  \r\n    \r\n  }\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const handleValueOnChang = (event) => {\r\n    setTextData(event.target.value);\r\n    console.log(event.target.value)\r\n  };\r\n\r\n  const mystyle = {\r\n    padding: \"15px\"\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <AppBar position=\"static\" color=\"default\">\r\n      <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          aria-label=\"full width tabs example\"\r\n        >\r\n          <Tab label=\"Search By Name\" {...a11yProps(0)} />\r\n          <Tab label=\"Search By Hash\" {...a11yProps(1)} />\r\n          <Tab label=\"Search By Json\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n      <Grid container md={12} justify=\"center\" alignItems=\"center\">\r\n        <Grid item md={7}>\r\n          <TextField type='text' label=\"Enter Name to Search\" fullWidth variant=\"outlined\" onChange={handleValueOnChang}/>\r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <Link to ={{\r\n            pathname: '/Search/SearchResult',\r\n            state: {\r\n              textData: textData,\r\n              searchType: \"0\"\r\n            }\r\n          }}>\r\n            <Button variant=\"contained\" color=\"primary\" style={mystyle} fullWidth>Search</Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>        \r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n      <Grid container md={12} justify=\"center\" alignItems=\"center\">\r\n        <Grid item md={7}>\r\n          <TextField type='text' label=\"Enter Hash to Search\" variant=\"outlined\" fullWidth onChange={handleValueOnChang}/>  \r\n        </Grid>\r\n        <Grid item md={2}>\r\n          <Link to ={{\r\n            pathname: '/Search/SearchResult',\r\n            state: {\r\n              textData: textData,\r\n              searchType: \"1\"\r\n            }\r\n          }}>\r\n            <Button variant=\"contained\" color=\"primary\" style={mystyle} fullWidth>Search</Button>\r\n          </Link>\r\n        </Grid>\r\n      </Grid>          \r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n      <Grid container md={12} justify=\"center\" alignItems=\"center\">\r\n        <Grid item md={2}>\r\n        <Button\r\n          variant=\"contained\"\r\n          component=\"label\"\r\n        >\r\n          Upload a file!\r\n          <input type=\"file\"\r\n            multiple={false}\r\n            accept=\".json\"\r\n            onChange={event=>openFile(event)}    \r\n            hidden        \r\n          />\r\n        </Button>          \r\n        </Grid>\r\n      </Grid>    \r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","C:\\Users\\alan\\fyp\\client\\src\\Search.js",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220"],"import React from 'react';\r\nimport SearchTabs from './SearchTabs';\r\nimport Index_Header from './Index_Header';\r\nimport Index_Footer from './Index_Footer';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { createMuiTheme, withStyles, makeStyles, ThemeProvider } from '@material-ui/core/styles';\r\nimport schoolPhoto from \"./photo/school.jpg\";\r\nimport organizationPhoto from \"./photo/company.jpg\";\r\nimport studentPhoto from \"./photo/student.jpg\";\r\nimport Flip  from 'react-reveal/Flip';\r\nimport Fade from 'react-reveal/Fade';\r\nimport { StylesProvider } from '@material-ui/styles';\r\n\r\nclass Search extends React.Component{\r\n    render(){\r\n        const hero = {\r\n            backgroundImage:\"linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url('https://images.pexels.com/photos/373893/pexels-photo-373893.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\", \r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center Bottom\",\r\n            backgroundRepeat: \"noRepeat\",\r\n            backgroundAttachment: \"fixed\",\r\n            color: \"#fff\",\r\n            width: \"101vw\",\r\n            marginLeft:'-8px',\r\n            marginTop:'-8px',\r\n        }\r\n\r\n        const searchTabs = {\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center center\",\r\n            backgroundRepeat: \"noRepeat\",\r\n            backgroundAttachment: \"fixed\",\r\n            width: \"100vw\",\r\n            marginLeft:'-8px',\r\n            paddingTop:'30px',\r\n            paddingBottom:'40px'\r\n        }\r\n\r\n        const whoCanUseIt = {\r\n            paddingTop:'80px',\r\n            paddingBottom:'80px'\r\n        }\r\n\r\n        const makeIt123 = {\r\n            marginTop:'30px',\r\n            marginBottom:'40px'\r\n        };\r\n        const makeItCenter = {\r\n            marginLeft:'auto',\r\n            marginRight:'auto',\r\n        };\r\n        const hihihi = {\r\n            marginLeft:'auto',\r\n            marginRight:'auto',\r\n            marginTop:'12.5vh',\r\n            marginBottom:'12.5vh'\r\n        };        \r\n        const img = {\r\n            width:\"70%\",\r\n            borderRadius: \"50%\"\r\n        };\r\n\r\n        const img2 = {\r\n            width:\"50%\"\r\n        };\r\n\r\n        const CoolButton = withStyles({\r\n            root: {\r\n                boxShadow: 'none',\r\n                textTransform: 'none',\r\n                fontSize: 16,\r\n                padding: '6px 12px',\r\n                border: '1px solid',\r\n                lineHeight: 1.5,              \r\n                color: '#fff',\r\n                borderColor: '#fff',\r\n            },\r\n            \"&:hover\": {\r\n                backgroundColor: '#fff',\r\n                borderColor: '#fff',\r\n                color: '#000000',\r\n            },\r\n            '&:focus': {\r\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n                borderColor: '#fff',\r\n                color: '#000000',\r\n            },\r\n        })(Button); \r\n\r\n        return(\r\n            <Grid container  md={12} justify=\"center\" alignItems=\"center\"> \r\n            <Paper style={hero}> \r\n            <div style={hero}>\r\n\r\n                    <Grid item md={8} style={makeItCenter} spacing={0}>\r\n                        <Index_Header/>\r\n                    </Grid>\r\n                    <Grid item md={8} style={hihihi} spacing={0}>\r\n                        <div>\r\n                            <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" align=\"center\" style={makeIt123}>\r\n                                <Flip left cascade>\r\n                                    Search Certificate    \r\n                                </Flip>                                                  \r\n                            </Typography>\r\n                        </div>                 \r\n                    </Grid>       \r\n            </div>            \r\n            </Paper>\r\n            <Paper style={searchTabs} elevation={0}> \r\n                <div style={searchTabs}>\r\n                <Grid container  md={12} justify=\"center\" alignItems=\"center\">\r\n                    <Grid item md={8}>\r\n                        <SearchTabs/>                        \r\n                    </Grid>                                                 \r\n                </Grid> \r\n                </div>\r\n            </Paper>\r\n\r\n        </Grid>\r\n        );\r\n    }\r\n}\r\nexport default Search;\r\n","C:\\Users\\alan\\fyp\\client\\src\\SearchResult.js",["221","222"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nfunction createData(studentName, courseName, schoolName, courseDate,_id) {\r\n    return { studentName, courseName, schoolName, courseDate, _id };\r\n}\r\nclass SearchResult extends React.Component{\r\n    state = {\r\n        textData: null,\r\n        searchType: null,\r\n        rows: []\r\n    }    \r\n\r\n    componentDidMount () {\r\n        const textData = this.props.location.state.textData;\r\n        const searchType = this.props.location.state.searchType;        \r\n\r\n        const rows_n = [];\r\n\r\n        fetch('/searchDB', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({textData: textData, searchType: searchType})})\r\n            .then(res => res.json())\r\n            .then(res => res.forEach(function(obj) { rows_n.push(createData(obj.studentName, obj.courseName, obj.schoolName, obj.courseDate, obj._id)) }) )\r\n            .then(res => this.setState(state => ({ \r\n                rows: rows_n,\r\n                textData: textData,\r\n                searchType: searchType\r\n            })))\r\n            \r\n      }\r\n\r\n    componentDidUpdate(prevState){\r\n\r\n        if (this.props.location.state.textData != this.state.textData) {\r\n            const textData = this.props.location.state.textData;\r\n            const searchType = this.props.location.state.searchType;\r\n            this.setState(state => ({ textData: textData }));\r\n            this.setState(state => ({ searchType: searchType }));      \r\n            \r\n            const rows_n = [];\r\n            \r\n            fetch('/searchDB', {\r\n                method: 'POST',\r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({textData: textData, searchType: searchType})})\r\n                .then(res => res.json())\r\n                .then(res => res.forEach(function(obj) { rows_n.push(createData(obj.studentName, obj.courseName, obj.schoolName, obj.courseDate, obj._id)) }) )\r\n                .then(res => this.setState(state => ({ rows: rows_n })));\r\n        }\r\n    }\r\n    \r\n\r\n    render(){\r\n\r\n        const mystyle = {\r\n            marginBottom:'160px'\r\n          };\r\n\r\n        const makeIt123 = {\r\n            marginTop:'-40px',\r\n            marginBottom:'40px'\r\n        };\r\n\r\n\r\n        const handleClick = (event, _id) => {\r\n            this.props.history.push({ \r\n                pathname: '/SearchResultDetail',\r\n                state: {\r\n                    _id: _id,\r\n                    textData: this.state.textData,\r\n                    searchType: this.state.searchType\r\n                  }\r\n            });    \r\n        };\r\n\r\n        return(\r\n            <Grid container md={12} justify=\"center\" alignItems=\"center\">\r\n                <Grid item md={8}>\r\n            <div>\r\n                <Typography component=\"h4\" variant=\"h4\" color=\"inherit\" align=\"left\" style={makeIt123}>\r\n                    This is the result of searching {this.state.textData} :                                                  \r\n                </Typography>\r\n                <TableContainer component={Paper} style={mystyle}>\r\n                <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                    <TableCell align=\"center\">Student Name</TableCell>\r\n                    <TableCell align=\"center\">Course Name</TableCell>\r\n                    <TableCell align=\"center\">School Name</TableCell>\r\n                    <TableCell align=\"center\">Course Finish Date</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {this.state.rows.map((row) =>                           \r\n                    <TableRow key={row._id} hover onClick={(event) => handleClick(event, row._id)} role=\"checkbox\">\r\n                        <TableCell align=\"center\">\r\n                        {row.studentName}\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">{row.courseName}</TableCell>\r\n                        <TableCell align=\"center\">{row.schoolName}</TableCell>\r\n                        <TableCell align=\"center\">{row.courseDate}</TableCell>\r\n                    </TableRow>\r\n                    )}\r\n                </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n                \r\n            </div>     \r\n            </Grid>                \r\n            </Grid>       \r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResult;","C:\\Users\\alan\\fyp\\client\\src\\SearchResultDetail.js",["223","224","225","226","227","228","229","230","231","232","233","234","235","236"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport web3 from 'web3';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Flip  from 'react-reveal/Flip';\r\nimport Index_Header from './Index_Header';\r\n\r\nfunction createData(studentName, courseName, schoolName, courseDate, publishDate, hash, hashSignature, transationId, _id,schoolId) {\r\n    return {\r\n        studentName,\r\n        courseName,\r\n        schoolName,\r\n        courseDate,\r\n        publishDate,\r\n        hash,\r\n        hashSignature,\r\n        transationId,\r\n        _id,\r\n        schoolId\r\n    };\r\n}\r\n\r\nclass SearchResultDetail extends React.Component {\r\n    state = {\r\n        textData: null,\r\n        searchType: null,\r\n        id: null,\r\n        rows: [],\r\n        transactionHash: null,\r\n        transactionAccount: null,\r\n        transactionData: null,\r\n        databaseResultHash: null,\r\n        open: false,\r\n        searchDBResult: null,\r\n        correctness_Hash: \"false\",\r\n        correctness_HashSignature: \"false\",\r\n        correctness_TransactionAccount: \"false\",\r\n        check_correctness_Hash: \"false\",\r\n        check_correctness_HashSignature: \"false\",\r\n        check_correctness_TransactionAccount: \"false\",\r\n        get_DataHash: \"false\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        const _id = this.props.location.state._id;\r\n        const textData = this.props.location.state.textData;\r\n        const searchType = this.props.location.state.searchType;\r\n        this.setState(state => ({textData: textData, searchType: searchType}))\r\n        const rows_n = [];\r\n\r\n        fetch('/searchDB', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n                body: JSON.stringify({searchType: \"3\", textData: _id})\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => res.forEach(function (obj) {\r\n                rows_n.push(createData(obj.studentName, obj.courseName, obj.schoolName, obj.courseDate, obj.publishDate, obj.hash, obj.hashSignature, obj.transationId, obj._id, obj.schoolId))\r\n            }))\r\n            .then(res => this.setState(state => ({rows: rows_n})))\r\n            .then(res => this.setState(state => ({transactionHash: rows_n[0][\"transationId\"], textData: textData, searchType: searchType})))\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n\r\n        console.log(\"componentDidUpdate\")\r\n\r\n        if (this.state.transactionHash != null && this.state.transactionAccount == null) {\r\n            console.log(\"1111\")\r\n            fetch('/getTransactionReceipt', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({transactionHash: this.state.transactionHash})\r\n            }).then(res => res.json())\r\n            // .then(res => console.log(res.logs[0][\"data\"])) .then(res => console.log(res))\r\n                .then(res => this.setState(state => ({transactionAccount: res.from, transactionData: res.logs[0][\"data\"]\r\n                //testTeam:matchfindresponse.team1.name, matchIdChanged: false\r\n            }))).then(console.log(\"transactionData: \" + this.state.transactionData));\r\n        }\r\n\r\n        if (this.state.searchDBResult != null) {\r\n            console.log(\"searchDBResultYYYY\")\r\n        } else {\r\n            console.log(\"searchDBResultBBBB\")\r\n            console.log(\"searchDBResult: \" + this.state.searchDBResult)\r\n        }\r\n\r\n        if (this.state.get_DataHash == \"false\") {\r\n            console.log(\"get_DataHashYYYY\")\r\n        } else {\r\n            console.log(\"get_DataHashBBBB\")\r\n        }\r\n\r\n        if (this.state.searchDBResult != null && this.state.get_DataHash == \"false\") {\r\n            console.log(\"222222\")\r\n            fetch('/getHash', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                    body: JSON.stringify({textData: this.state.searchDBResult})\r\n                })\r\n                .then(res => res.text())\r\n                .then(res => this.setState(state => ({databaseResultHash: res})))\r\n                .then(res => this.setState(state => ({get_DataHash: \"ture\"})))\r\n                .then(console.log(\"transactionData: \" + this.state.transactionData))\r\n                .then(console.log(\"databaseResultHash: \" + web3.utils.asciiToHex(this.state.databaseResultHash)))\r\n        }\r\n\r\n        if (web3.utils.asciiToHex(this.state.databaseResultHash) == this.state.transactionData && this.state.check_correctness_Hash == \"false\") {\r\n            this.setState(state => ({correctness_Hash: \"true\"}))\r\n            this.setState(state => ({check_correctness_Hash: \"true\"}))\r\n            console.log(\"true\")\r\n        }\r\n\r\n        if (this.state.databaseResultHash != null && this.state.correctness_HashSignature == \"false\" && this.state.check_correctness_HashSignature == \"false\") {\r\n            fetch('/verifyHash', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                    body: JSON.stringify({schoolId: this.state.rows[0][\"schoolId\"], textData: this.state.databaseResultHash, signature: this.state.rows[0][\"hashSignature\"]\r\n                })\r\n                })\r\n                .then(res => res.text())\r\n                .then(res => this.setState(state => ({correctness_HashSignature: res})))\r\n                .then(res => this.setState(state => ({check_correctness_HashSignature: \"true\"})))\r\n        }\r\n\r\n        if (this.state.transactionAccount != null && this.state.correctness_TransactionAccount == \"false\" && this.state.check_correctness_TransactionAccount == \"false\") {\r\n            fetch('/checkAccount', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                    body: JSON.stringify({\r\n                        //textData: this.state.transactionAccount\r\n                        textData: this.state.transactionAccount,\r\n                        schoolId: this.state.rows[0][\"schoolId\"]\r\n                    })\r\n                })\r\n                .then(res => res.text())\r\n                .then(res => this.setState(state => ({correctness_TransactionAccount: res})))\r\n                .then(res => this.setState(state => ({check_correctness_TransactionAccount: \"true\"})))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const hero = {\r\n            backgroundImage:\"linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url('https://images.pexels.com/photos/169677/pexels-photo-169677.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\", \r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center Bottom\",\r\n            backgroundRepeat: \"noRepeat\",\r\n            backgroundAttachment: \"fixed\",\r\n            color: \"#fff\",\r\n            width: \"101vw\",\r\n            marginLeft:'-8px',\r\n            marginTop:'-8px',\r\n        };\r\n\r\n        const makeIt123 = {\r\n            marginTop:'40px',\r\n            marginBottom:'40px'\r\n        };\r\n\r\n        const hihihi = {\r\n            marginLeft:'auto',\r\n            marginRight:'auto',\r\n            marginTop:'12.5vh',\r\n            marginBottom:'12.5vh'\r\n        };  \r\n\r\n        const makeItCenter = {\r\n            marginLeft:'auto',\r\n            marginRight:'auto',\r\n        };\r\n\r\n        const mystyle = {\r\n            display: \"block\",\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: \"ellipsis\"\r\n        };\r\n\r\n        const TableRowColumnStyle = {\r\n            whiteSpace: 'nowrap',\r\n            wordWrap: 'break-word'\r\n        };\r\n\r\n        const buttonStyle = {\r\n            display: \"inline\",\r\n            marginLeft: \"5px\"\r\n        };\r\n\r\n        const modal = {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        }\r\n        const paper = {\r\n            background: \"white\",\r\n            border: '2px solid #000',\r\n            boxShadow: \"5px\",\r\n            padding: \"0px 30px 50px 30px\"\r\n        }\r\n\r\n        const handleOpen = () => {\r\n            console.log(this.state.rows[0][\"_id\"])\r\n            this.setState(state => ({open: true}));\r\n            fetch('/searchDB', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({textData: this.state.rows[0][\"_id\"], searchType: \"4\"})\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => this.setState(state => ({searchDBResult: res})));\r\n\r\n        };\r\n\r\n        const handleClose = () => {\r\n            this.setState(state => ({open: false}));\r\n        };\r\n        return (\r\n            <Grid container md={12} justify=\"center\" alignItems=\"center\">\r\n                <Paper style={hero}> \r\n                <div style={hero}>\r\n\r\n                        <Grid item md={8} style={makeItCenter} spacing={0}>\r\n                            <Index_Header/>\r\n                        </Grid>\r\n                        <Grid item md={8} style={hihihi} spacing={0}>\r\n                            <div>\r\n                                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" align=\"center\" style={makeIt123}>\r\n                                    <Flip left cascade>\r\n                                    Certificate Data   \r\n                                    </Flip>                                                  \r\n                                </Typography>\r\n                            </div>                 \r\n                        </Grid>       \r\n                </div>            \r\n                </Paper>\r\n                <Grid item md={8}>\r\n                    <div style={makeIt123}>\r\n                        <TableContainer component={Paper} style={mystyle}>\r\n                            <Table aria-label=\"simple table\">\r\n                                {this\r\n                                    .state\r\n                                    .rows\r\n                                    .map((row) => (\r\n                                        <TableBody>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Student Name:</TableCell>\r\n                                                <TableCell align=\"left\">{row.studentName}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Course Name:</TableCell>\r\n                                                <TableCell align=\"left\">{row.courseName}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">School Name:</TableCell>\r\n                                                <TableCell align=\"left\">{row.schoolName}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Course Finish Date:</TableCell>\r\n                                                <TableCell align=\"left\">{row.courseDate}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Data Insert Date:</TableCell>\r\n                                                <TableCell align=\"left\">{row.publishDate}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Data Hash:</TableCell>\r\n                                                <TableCell align=\"left\">{row.hash}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Hash Signature:</TableCell>\r\n\r\n                                                <TableCell maxWidth=\"50px\" align=\"left\">\r\n                                                    {row\r\n                                                        .hashSignature\r\n                                                        .substring(0, row.hashSignature.length / 2)}\r\n                                                </TableCell>\r\n\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\"></TableCell>\r\n\r\n                                                <TableCell maxWidth=\"50px\" align=\"left\">\r\n                                                    {row\r\n                                                        .hashSignature\r\n                                                        .substring(row.hashSignature.length / 2, row.hashSignature.length)}\r\n                                                </TableCell>\r\n\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Transaction Account:</TableCell>\r\n                                                <TableCell align=\"left\">{this.state.transactionAccount}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Transaction Id:</TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <a target=\"_blank\" href={\"https://ropsten.etherscan.io/tx/\" + row.transationId}>{row.transationId}</a>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\"></TableCell>\r\n                                                <TableCell align=\"right\">\r\n\r\n                                                    <Link\r\n                                                        to\r\n                                                        ={{\r\n                                                        pathname: '/Search/SearchResult',\r\n                                                        state: {\r\n                                                            textData: this.state.textData,\r\n                                                            searchType: this.state.searchType\r\n                                                        }\r\n                                                    }}>\r\n                                                        <Button variant=\"contained\" color=\"primary\" style={buttonStyle}>Go Back</Button>\r\n                                                    </Link>\r\n\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        style={buttonStyle}\r\n                                                        onClick={handleOpen}>Verfy Data</Button>\r\n\r\n                                                    <Modal\r\n                                                        aria-labelledby=\"transition-modal-title\"\r\n                                                        aria-describedby=\"transition-modal-description\"\r\n                                                        open={this.state.open}\r\n                                                        onClose={handleClose}\r\n                                                        closeAfterTransition\r\n                                                        BackdropComponent={Backdrop}\r\n                                                        BackdropProps={{\r\n                                                        timeout: 500\r\n                                                    }}\r\n                                                        display='flex'\r\n                                                        alignItems='center'\r\n                                                        style={modal}>\r\n                                                        <Fade in={this.state.open}>\r\n                                                            <div style={paper}>\r\n                                                                <h2 id=\"transition-modal-title\">Blockchain data validation</h2>\r\n                                                                <table>\r\n                                                                    <tr>\r\n                                                                        <td>Student Name:</td>\r\n                                                                        <td>{this.state.rows[0][\"studentName\"]}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>School Name:</td>\r\n                                                                        <td>{this.state.rows[0][\"schoolName\"]}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Course Name:</td>\r\n                                                                        <td>{this.state.rows[0][\"courseDate\"]}</td>\r\n                                                                    </tr>\r\n                                                                </table>\r\n                                                                <Divider variant=\"middle\"/>\r\n                                                                <table>\r\n                                                                    <tr>\r\n                                                                        <td>Correctness Hash:</td>\r\n                                                                        <td>{this.state.correctness_Hash}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Correctness HashSignature:</td>\r\n                                                                        <td>{this.state.correctness_HashSignature}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Correctness TransactionAccount:</td>\r\n                                                                        <td>{this.state.correctness_TransactionAccount}</td>\r\n                                                                    </tr>\r\n                                                                </table>\r\n                                                            </div>\r\n                                                        </Fade>\r\n                                                    </Modal>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    ))}\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResultDetail;","C:\\Users\\alan\\fyp\\client\\src\\Login.js",["237","238","239","240","241","242","243","244","245"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Index_Header from './Index_Header';\r\n\r\nclass Login extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {userNumber : '', password:'',id:'',typeOfUser:''}\r\n        //設定該function的this為class本身\r\n        this.submitForm = this.submitForm.bind(this)\r\n        this.changeUserNumberState = this.changeUserNumberState.bind(this)\r\n        this.changePasswordState = this.changePasswordState.bind(this)\r\n    }    \r\n\r\n    changeUserNumberState(event){\r\n        //使用setState將值寫到nameVal中\r\n        this.setState({userNumber:event.target.value}, () => console.log(this.state.userNumber))\r\n        console.log('改了改了')\r\n    }\r\n    changePasswordState(event){\r\n        //使用setState將值寫到nameVal中\r\n        this.setState({password:event.target.value}, () => console.log(this.state.password))\r\n        console.log('改了改了' + this.state.password)\r\n        console.log(event.target.value)\r\n    }\r\n\r\n    submitForm(event){\r\n        event.preventDefault()\r\n        //loginUser(\"abc\");\r\n        const userNumber = this.state.userNumber\r\n        const password = this.state.password\r\n        fetch('/loginabc', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({userNumber: userNumber, password: password})\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => { \r\n          if(res.userId==\"\"|| res.typeOfUser==\"\"){\r\n            alert(\"The enter userNumber or password is wrong\")\r\n          }else{\r\n            this.props.history.push({ \r\n              pathname: '/'+res.typeOfUser,\r\n              //pathname: '/Worker',\r\n              state: {\r\n                  userId:res.userId,\r\n                  typeOfUser:res.typeOfUser,\r\n                  userName:res.userName\r\n              }\r\n          })\r\n          }\r\n        });        \r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n\r\n    const paper = {\r\n            marginTop: 8,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n          }\r\n    const avatar = {\r\n            margin: 1,\r\n            //backgroundColor: theme.palette.secondary.main,\r\n        }\r\n    const form = {\r\n            width: '80%', // Fix IE 11 issue.\r\n            minWidth: '200px',\r\n            padding: \"40px\",\r\n            marginTop:'20vh',\r\n    }\r\n    const submit = {\r\n            margin: (3, 0, 2),\r\n    }\r\n\r\n    const makeItCenter = {\r\n      marginLeft:'auto',\r\n      marginRight:'auto',\r\n    };\r\n\r\n    const makeItRight = {\r\n      marginLeft:'auto',\r\n      \r\n    };\r\n\r\n    const hihihi = {\r\n        marginLeft:'auto',\r\n        marginRight:'auto',\r\n        marginTop:'25vh',\r\n        marginBottom:'25vh'\r\n    };\r\n\r\n    const hero = {\r\n      backgroundImage:\"linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url('https://images.pexels.com/photos/373543/pexels-photo-373543.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\", \r\n      backgroundSize: \"cover\",\r\n      backgroundPosition: \"center center\",\r\n      backgroundRepeat: \"noRepeat\",\r\n      backgroundAttachment: \"fixed\",\r\n      color: \"#fff\",\r\n      width: \"101vw\",\r\n      height: '100vh',\r\n      marginLeft:'-8px',\r\n      marginTop:'-8px',\r\n    };\r\n\r\n  \r\n  return (\r\n    <Grid container  md={12} xs={12} justify=\"center\" alignItems=\"center\"> \r\n    <Paper style={hero}> \r\n      <div style={hero}>\r\n        <Grid item md={8} xs={8} style={makeItCenter} spacing={0}>\r\n          <Index_Header/>\r\n        </Grid>\r\n        <Grid item md={8} xs={8} style={makeItCenter} spacing={0}>\r\n        <Grid item md={4} sm={4} xs={12} style={makeItRight} spacing={0}>\r\n        <Paper style={form} elevation={0} variant=\"outlined\" square> \r\n          <Typography component=\"h4\" variant=\"h4\" align=\"center\" >\r\n          Sign in\r\n        </Typography>\r\n        <form noValidate onSubmit={this.submitForm}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"userNumber\"\r\n            label=\"User ID\"\r\n            name=\"userNumber\"\r\n            autoComplete=\"userNumber\"\r\n            autoFocus\r\n            onChange={this.changeUserNumberState}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n            onChange={this.changePasswordState}\r\n          />\r\n          <Button \r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={submit}\r\n          >\r\n            Sign In\r\n          </Button >\r\n        </form>\r\n      </Paper> \r\n      </Grid>              \r\n        </Grid>       \r\n      </div>\r\n    </Paper>\r\n     \r\n    </Grid>\r\n  );\r\n}\r\n}\r\n\r\nexport default Login;","C:\\Users\\alan\\fyp\\client\\src\\login.js",["246","247","248","249","250"],"C:\\Users\\alan\\fyp\\client\\src\\Admin.js",["251","252","253","254","255"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Admin_upperlistItems from './Admin_upperlistItems';\r\nimport Admin_lowerlistItems from './Admin_lowerlistItems';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Admin() {\r\n  const location = useLocation();\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleClick2Home = () => {\r\n    history.push({ \r\n        pathname: '/Admin',\r\n        state: { userId: userId,userName: userName}\r\n    });    \r\n  };\r\n\r\n  const handleClick2Logout = () => {\r\n    history.push({ \r\n        pathname: '/Login'\r\n    });    \r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    console.log({userId})\r\n    console.log({userName})\r\n  });\r\n/*\r\n  useEffect(() => {\r\n    if(id=='' || userName=='') {\r\n      history.push('/Login');\r\n    }\r\n  });\r\n*/\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title} onClick={handleClick2Home}>\r\n            Dashboard\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h6\" align=\"right\" color=\"inherit\" noWrap className={classes.title}>\r\n            hi {userName}\r\n          </Typography>\r\n          <Tooltip title=\"Logout\" aria-label=\"Logout\" onClick={handleClick2Logout}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ExitToAppIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><Admin_upperlistItems userId=\"a\" userName=\"a\" /></List>\r\n        <Divider />\r\n        <List><Admin_lowerlistItems userId=\"a\" userName=\"a\" /></List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={8} lg={9}>\r\n              <Paper className={fixedHeightPaper}>\r\n                \r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Deposits */}\r\n            <Grid item xs={12} md={4} lg={3}>\r\n              <Paper className={fixedHeightPaper}>\r\n                \r\n              </Paper>\r\n            </Grid>\r\n            {/* Recent Orders */}\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                \r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\alan\\fyp\\client\\src\\Worker.js",["256","257","258","259"],"C:\\Users\\alan\\fyp\\client\\src\\Orders.js",[],["260","261"],"C:\\Users\\alan\\fyp\\client\\src\\worker.js",["262","263","264","265","266"],"C:\\Users\\alan\\fyp\\client\\src\\CreateCertificate.js",["267","268","269","270","271","272","273","274"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport CreateCertificate_component from './CreateCertificate_component';\r\nimport Worker_upperlistItems from './Worker_upperlistItems';\r\nimport Worker_lowerlistItems from './Worker_lowerlistItems';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function CreateCertificate() {\r\n  const location = useLocation();\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleClick2Home = () => {\r\n    history.push({ \r\n        pathname: '/Worker',\r\n        state: { userId: userId,userName: userName}\r\n    });    \r\n  };\r\n\r\n  const handleClick2Logout = () => {\r\n    history.push({ \r\n        pathname: '/Login'\r\n    });    \r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    console.log({userId})\r\n    console.log({userName})\r\n  });\r\n/*\r\n  useEffect(() => {\r\n    if(id=='' || userName=='') {\r\n      history.push('/Login');\r\n    }\r\n  });\r\n*/\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title} onClick={handleClick2Home}>\r\n              Dashboard\r\n            </Typography>\r\n          \r\n          <Typography component=\"h1\" variant=\"h6\" align=\"right\" color=\"inherit\" noWrap className={classes.title}>\r\n            hi {userName}\r\n          </Typography>\r\n          <Tooltip title=\"Logout\" aria-label=\"Logout\" onClick={handleClick2Logout}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ExitToAppIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><Worker_upperlistItems userId={userId} userName={userName} /></List>\r\n        <Divider />\r\n        <List><Worker_lowerlistItems userId={userId} userName={userName} /></List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>        \r\n       \r\n          <Grid container spacing={3}>\r\n            {/* CreateCertificate_component */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper>\r\n              \r\n              <CreateCertificate_component />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\alan\\fyp\\client\\src\\worker_upperlistItems.js",["275"],"C:\\Users\\alan\\fyp\\client\\src\\worker_lowerlistItems.js",["276","277","278","279","280"],"C:\\Users\\alan\\fyp\\client\\src\\Worker_upperlistItems.js",[],"C:\\Users\\alan\\fyp\\client\\src\\Worker_lowerlistItems.js",["281","282","283","284","285","286"],"C:\\Users\\alan\\fyp\\client\\src\\CreateCertificate_component.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300"],"C:\\Users\\alan\\fyp\\client\\src\\ReviewingCertificate.js",["301","302","303","304","305","306","307"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ReviewingCertificate_component from './ReviewingCertificate_component';\r\nimport Worker_upperlistItems from './Worker_upperlistItems';\r\nimport Worker_lowerlistItems from './Worker_lowerlistItems';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function ReviewingCertificate() {\r\n  const location = useLocation();\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  useEffect(() => {\r\n\r\n    console.log({userId})\r\n    console.log({userName})\r\n  });\r\n\r\n  const handleClick2Home = () => {\r\n    history.push({ \r\n        pathname: '/Worker',\r\n        state: { userId: userId,userName: userName}\r\n    });    \r\n  };\r\n\r\n  const handleClick2Logout = () => {\r\n    history.push({ \r\n        pathname: '/Login'\r\n    });    \r\n  };\r\n\r\n/*\r\n  useEffect(() => {\r\n    if(id=='' || userName=='') {\r\n      history.push('/Login');\r\n    }\r\n  });\r\n*/\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title} onClick={handleClick2Home}>\r\n              Dashboard\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h6\" align=\"right\" color=\"inherit\" noWrap className={classes.title}>\r\n            hi {userName}\r\n          </Typography>\r\n          <Tooltip title=\"Logout\" aria-label=\"Logout\" onClick={handleClick2Logout}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ExitToAppIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><Worker_upperlistItems userId={userId} userName={userName} /></List>\r\n        <Divider />\r\n        <List><Worker_lowerlistItems userId={userId} userName={userName} /></List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>        \r\n       \r\n          <Grid container spacing={3}>\r\n            {/* CreateCertificate_component */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper>\r\n              \r\n              <ReviewingCertificate_component />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\alan\\fyp\\client\\src\\ReviewingCertificate_component.js",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nfunction createData(createdAt,studentName, courseName, schoolName, courseDate,_id) {\r\n  return { createdAt,studentName, courseName, schoolName, courseDate, _id };\r\n}\r\n\r\nexport default function ReviewingCertificate_component() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const [rows, setRows] = React.useState([]);\r\n  const [searched, setSearched] = React.useState(false);\r\n  const [schoolName, setSchoolName] = React.useState(\"\");\r\n  const [fName, setfName] = React.useState(\"\");\r\n  const [lName, setlName] = React.useState(\"\");\r\n  const [courseName, setCourseName] = React.useState(\"\");\r\n  const [finishDate, setFinishDate] = React.useState(\"\");\r\n\r\n  useEffect(() => {        \r\n    if (!searched) {        \r\n      const textData = userId;\r\n      const searchType = \"5\"; \r\n\r\n      const rows_n = [];\r\n\r\n      fetch('/searchDB', {\r\n        method: 'POST',\r\n        headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({textData: textData, searchType: searchType})})\r\n        .then(res => res.json())      \r\n        .then(res => res.forEach(function(obj) { rows_n.push(createData(obj.createdAt,obj.studentName, obj.courseName, obj.schoolName, obj.courseDate, obj._id)) }) )\r\n        .then(res => setRows(rows_n))\r\n        .then(setSearched(true))\r\n    }\r\n  });\r\n  \r\n  return(\r\n    <Grid container md={12} justify=\"center\" alignItems=\"center\" className={classes.paper}>\r\n        <Grid item md={11}>\r\n    <div>\r\n        <div><h1>Reviewing Certificate</h1></div>\r\n        <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n            <TableRow>\r\n            <TableCell align=\"center\">id</TableCell>\r\n            <TableCell align=\"center\">Created Data</TableCell>\r\n            <TableCell align=\"center\">Student Name</TableCell>\r\n            <TableCell align=\"center\">Course Name</TableCell>\r\n            <TableCell align=\"center\">School Name</TableCell>            \r\n            <TableCell align=\"center\">Course Finish Date</TableCell>            \r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            {rows.map((row) =>                           \r\n              <TableRow key={row._id} hover role=\"checkbox\">\r\n                  <TableCell align=\"center\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.createdAt}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.studentName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.courseName}</TableCell>\r\n                  <TableCell align=\"center\">{row.schoolName}</TableCell>\r\n                  <TableCell align=\"center\">{row.courseDate}</TableCell>\r\n              </TableRow>\r\n            )}\r\n        </TableBody>\r\n        </Table>\r\n    </TableContainer>\r\n        \r\n    </div>     \r\n    </Grid>                \r\n    </Grid>       \r\n);\r\n}","C:\\Users\\alan\\fyp\\client\\src\\ProblemCertificate.js",["332","333","334","335","336","337","338","339"],"C:\\Users\\alan\\fyp\\client\\src\\ProblemCertificate_component.js",["340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"C:\\Users\\alan\\fyp\\client\\src\\Admin_lowerlistItems.js",["369","370","371","372","373","374"],"C:\\Users\\alan\\fyp\\client\\src\\Admin_upperlistItems.js",["375","376","377","378","379","380","381"],"C:\\Users\\alan\\fyp\\client\\src\\AuditCertificate.js",["382","383","384","385","386","387","388"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport AuditCertificate_component from './AuditCertificate_component';\r\nimport Admin_upperlistItems from './Admin_upperlistItems';\r\nimport Admin_lowerlistItems from './Admin_lowerlistItems';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function AuditCertificate() {\r\n  const location = useLocation();\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleClick2Home = () => {\r\n    history.push({ \r\n        pathname: '/Admin',\r\n        state: { userId: userId,userName: userName}\r\n    });    \r\n  };\r\n\r\n  const handleClick2Logout = () => {\r\n    history.push({ \r\n        pathname: '/Login'\r\n    });    \r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    console.log({userId})\r\n    console.log({userName})\r\n  });\r\n/*\r\n  useEffect(() => {\r\n    if(id=='' || userName=='') {\r\n      history.push('/Login');\r\n    }\r\n  });\r\n*/\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title} onClick={handleClick2Home}>\r\n            Dashboard\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h6\" align=\"right\" color=\"inherit\" noWrap className={classes.title}>\r\n            hi {userName}\r\n          </Typography>\r\n          <Tooltip title=\"Logout\" aria-label=\"Logout\" onClick={handleClick2Logout}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ExitToAppIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><Admin_upperlistItems userId={userId} userName={userName} /></List>\r\n        <Divider />\r\n        <List><Admin_lowerlistItems userId={userId} userName={userName} /></List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>        \r\n       \r\n          <Grid container spacing={3}>\r\n            {/* CreateCertificate_component */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper>\r\n              \r\n              <AuditCertificate_component />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\alan\\fyp\\client\\src\\AuditCertificate_component.js",["389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CreateCertificate_component from './CreateCertificate_component';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  }, \r\n  Dialog: {\r\n    height : \"80vh\",\r\n  },  \r\n  form: {\r\n    height : \"100%\",\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textArea:{\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nfunction createData(createdAt,studentLName,studentFName, courseName, schoolName, courseDate,_id, createrId) {\r\n  return { createdAt,studentLName,studentFName, courseName, schoolName, courseDate, _id, createrId };\r\n}\r\n\r\nexport default function AuditCertificate_component() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const [rows, setRows] = React.useState([]);\r\n  const [searched, setSearched] = React.useState(false);\r\n  const [schoolName, setSchoolName] = React.useState(\"\");\r\n  const [schoolId, setSchoolId] = React.useState(\"\");\r\n  const [studentName, setStudentName] = React.useState(\"\");\r\n  const [studentFName, setStudentFName] = React.useState(\"\");\r\n  const [studentLName, setStudentLName] = React.useState(\"\");\r\n  const [courseName, setCourseName] = React.useState(\"\");\r\n  const [modifyComment, setModifyComment] = React.useState(\"\");\r\n  const [fName, setfName] = React.useState(\"\");\r\n  const [lName, setlName] = React.useState(\"\");\r\n  const [finishDate, setFinishDate] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [_id, set_id] = React.useState(\"\");\r\n  const [studentID, setStudentID] = React.useState(\"\");\r\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = (event, row) => {\r\n    setOpen(true);\r\n    const textData = row._id;\r\n    const searchType = \"7\"; \r\n\r\n    fetch('/searchDB', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({textData: textData, searchType: searchType})})\r\n      .then(res => res.json())        \r\n      .then(res => set_id(textData)&setStudentLName(res[0][\"studentLName\"])&setStudentFName(res[0][\"studentFName\"])&setStudentID(res[0][\"studentID\"])&setCourseName(res[0][\"courseName\"])&setSchoolName(res[0][\"schoolName\"])&setFinishDate(res[0][\"courseDate\"])&setSchoolId(res[0][\"schoolId\"])&setModifyComment(res[0][\"modifyComment\"]))\r\n  };\r\n\r\n  const handlePass = (event,_id) => {\r\n    event.preventDefault()\r\n    const textData = _id;\r\n    console.log({textData})    \r\n    \r\n    fetch('/registerCertificate', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({textData: textData})})\r\n      .then(res => res.json())        \r\n      .then(setOpen(false)&setSearched(false)&setSnackbarOpen(true)&setSnackbarMessage(\"Certificate Passed Id: \" + _id))\r\n    \r\n  }; \r\n\r\n  const handleModify = (event,_id) => {\r\n    event.preventDefault()\r\n    \r\n    fetch('/addModifyComment', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({_id: _id,modifyComment:modifyComment})})\r\n      .then(res => res.json())        \r\n      .then(setOpen(false)&setSearched(false)&setSnackbarOpen(true)&setSnackbarMessage(\"Certificate Modifing Id: \" + _id))\r\n      \r\n  }; \r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {     \r\n    console.log(\"hihihihi\")  \r\n    console.log(searched)   \r\n    if (!searched) {        \r\n      const textData = userId;\r\n      const searchType = \"8\"; \r\n\r\n      const rows_n = [];\r\n\r\n      fetch('/searchDB', {\r\n        method: 'POST',\r\n        headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({textData: textData, searchType: searchType})})        \r\n        .then(res => res.json())     \r\n        .then(res => res.forEach(function(obj) { rows_n.push(createData(obj.createdAt,obj.studentLName,obj.studentFName, obj.courseName, obj.schoolName, obj.courseDate, obj._id, obj.createrId)) }) )\r\n        .then(res => setRows(rows_n))\r\n        .then(setSearched(true))\r\n    }\r\n  });\r\n  \r\n  return(\r\n    <React.Fragment>\r\n    <Grid container md={12} justify=\"center\" alignItems=\"center\" className={classes.paper}>\r\n        <Grid item md={11}>\r\n    <div>\r\n        <div><h1>Audit Certificate</h1></div>\r\n        <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n            <TableRow>\r\n            <TableCell align=\"center\">Id</TableCell>\r\n            <TableCell align=\"center\">Created Data</TableCell>\r\n            <TableCell align=\"center\">Student Name</TableCell>\r\n            <TableCell align=\"center\">Course Name</TableCell>\r\n            <TableCell align=\"center\">School Name</TableCell>            \r\n            <TableCell align=\"center\">Course Finish Date</TableCell>\r\n            <TableCell align=\"center\">creatorID</TableCell>            \r\n            <TableCell align=\"center\">Processing</TableCell>  \r\n            <TableCell align=\"center\">Audit</TableCell>  \r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            {rows.map((row) =>                           \r\n              <TableRow key={row._id} hover role=\"checkbox\">\r\n                  <TableCell align=\"center\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.createdAt}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.studentLName + \" \" + row.studentFName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.courseName}</TableCell>\r\n                  <TableCell align=\"center\">{row.schoolName}</TableCell>\r\n                  <TableCell align=\"center\">{row.courseDate}</TableCell>\r\n                  <TableCell align=\"center\">{row.createrId}</TableCell>\r\n                  <TableCell align=\"center\">                    \r\n                    <Checkbox\r\n                      checked={false}\r\n                      color=\"primary\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox',readOnly: true }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={(event) => handleClickOpen(event, row)} disabled={(row.publish || row.modify)}>\r\n                      Audit   \r\n                    </Button>\r\n                  </TableCell>\r\n              </TableRow>\r\n            )}\r\n        </TableBody>\r\n        </Table>\r\n    </TableContainer>\r\n        \r\n    </div>     \r\n    </Grid>                \r\n    </Grid>  \r\n    \r\n      <Dialog\r\n        fullWidth={\"md\"}\r\n        maxWidth={\"lg\"}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent className={classes.Dialog}>\r\n          <form className={classes.form} noValidate>\r\n          <Grid container md={12} className={classes.paper}>\r\n            <Grid item md={5} className={classes.form}>\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} align=\"left\">\r\n                <Typography variant={'h6'} color={'primary'}>\r\n                Certificate information:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} align=\"left\">\r\n                <TextField\r\n                    autoComplete=\"certificateId\"\r\n                    name=\"certificateId\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={_id}\r\n                    id=\"certificateId\"\r\n                    label=\"Certificate Id\"       \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"studentLName\"\r\n                    name=\"lName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentLName}\r\n                    id=\"studentLName\"\r\n                    label=\"Student Last Name\"       \r\n                    onChange={e => setStudentLName(e.target.value)} \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}   \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"studentFName\"\r\n                    name=\"fName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentFName}\r\n                    id=\"studentFName\"\r\n                    label=\"Student First Name\"     \r\n                    onChange={e => setStudentFName(e.target.value)} \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}             \r\n                  />\r\n                </Grid>           \r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    autoComplete=\"studentID\"\r\n                    name=\"studentID\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentID}\r\n                    id=\"studentID\"\r\n                    label=\"Student ID\"     \r\n                    onChange={e => setStudentID(e.target.value)}   \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}             \r\n                  />\r\n                </Grid> \r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"courseName\"\r\n                    label=\"Course Name\"\r\n                    name=\"courseName\"\r\n                    value={courseName}\r\n                    onChange={e => setCourseName(e.target.value)}   \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"schoolName\"\r\n                    label=\"school Name\"\r\n                    name=\"schoolName\"\r\n                    value={schoolName}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"finishDate\"\r\n                    label=\"Course Finish Date\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    value={finishDate}\r\n                    onChange={e => setFinishDate(e.target.value)}  \r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              \r\n            </Grid>  \r\n            <Grid item md={5} className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography variant={'h6'} color={'primary'}>\r\n                Comment form admin:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                  <TextareaAutosize\r\n                    rowsMin={15}\r\n                    className={classes.textArea}\r\n                    value={modifyComment}\r\n                    onChange={e => setModifyComment(e.target.value)}                 \r\n                    aria-label=\"maximum height\"\r\n                    placeholder={\"Plase input problem description \" + \"\\n\" + \"If certificate information need to modify\"}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={(event) => handlePass(event, _id)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                >\r\n                  pass\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={(event) => handleModify(event, _id)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                >\r\n                  Modify\r\n                </Button>\r\n              </Grid>\r\n              </Grid>              \r\n            </Grid> \r\n          </Grid>   \r\n              \r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        message={snackbarMessage}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n\r\n    </React.Fragment>\r\n\r\n);\r\n}","C:\\Users\\alan\\fyp\\client\\src\\ModifiedCertificate.js",["416","417","418","419","420","421","422"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ModifiedCertificate_component from './ModifiedCertificate_component';\r\nimport Admin_upperlistItems from './Admin_upperlistItems';\r\nimport Admin_lowerlistItems from './Admin_lowerlistItems';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function ModifiedCertificate() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleClick2Home = () => {\r\n    history.push({ \r\n        pathname: '/Admin',\r\n        state: { userId: userId,userName: userName}\r\n    });    \r\n  };\r\n\r\n  const handleClick2Logout = () => {\r\n    history.push({ \r\n        pathname: '/Login'\r\n    });    \r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    console.log({userId})\r\n    console.log({userName})\r\n  });\r\n/*\r\n  useEffect(() => {\r\n    if(id=='' || userName=='') {\r\n      history.push('/Login');\r\n    }\r\n  });\r\n*/\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title} onClick={handleClick2Home}>\r\n            Dashboard\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h6\" align=\"right\" color=\"inherit\" noWrap className={classes.title}>\r\n            hi {userName}\r\n          </Typography>\r\n          <Tooltip title=\"Logout\" aria-label=\"Logout\" onClick={handleClick2Logout}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ExitToAppIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><Admin_upperlistItems userId={userId} userName={userName} /></List>\r\n        <Divider />\r\n        <List><Admin_lowerlistItems userId={userId} userName={userName} /></List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>        \r\n       \r\n          <Grid container spacing={3}>\r\n            {/* CreateCertificate_component */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper>\r\n              \r\n              <ModifiedCertificate_component />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\alan\\fyp\\client\\src\\ModifiedCertificate_component.js",["423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CreateCertificate_component from './CreateCertificate_component';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  }, \r\n  Dialog: {\r\n    height : \"80vh\",\r\n  },  \r\n  form: {\r\n    height : \"100%\",\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textArea:{\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nfunction createData(createdAt,studentLName,studentFName, courseName, schoolName, courseDate,_id, createrId,modified) {\r\n  return { createdAt,studentLName,studentFName, courseName, schoolName, courseDate, _id, createrId,modified };\r\n}\r\n\r\nexport default function ModifiedCertificate_component() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const [rows, setRows] = React.useState([]);\r\n  const [searched, setSearched] = React.useState(false);\r\n  const [schoolName, setSchoolName] = React.useState(\"\");\r\n  const [schoolId, setSchoolId] = React.useState(\"\");\r\n  const [studentName, setStudentName] = React.useState(\"\");\r\n  const [studentFName, setStudentFName] = React.useState(\"\");\r\n  const [studentLName, setStudentLName] = React.useState(\"\");\r\n  const [courseName, setCourseName] = React.useState(\"\");\r\n  const [modifyComment, setModifyComment] = React.useState(\"\");\r\n  const [fName, setfName] = React.useState(\"\");\r\n  const [lName, setlName] = React.useState(\"\");\r\n  const [finishDate, setFinishDate] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [_id, set_id] = React.useState(\"\");\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [studentID, setStudentID] = React.useState(\"\");\r\n  const [snackbarOpen, setSnackbarOpen] = React.useState(false);\r\n  const [snackbarMessage, setSnackbarMessage] = React.useState(\"\");\r\n\r\n  const handleSnackbarClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setSnackbarOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = (event, row) => {\r\n    setOpen(true);\r\n    const textData = row._id;\r\n    const searchType = \"7\"; \r\n\r\n    fetch('/searchDB', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({textData: textData, searchType: searchType})})\r\n      .then(res => res.json())        \r\n      .then(res => set_id(textData)&setStudentLName(res[0][\"studentLName\"])&setStudentFName(res[0][\"studentFName\"])&setStudentID(res[0][\"studentID\"])&setCourseName(res[0][\"courseName\"])&setSchoolName(res[0][\"schoolName\"])&setFinishDate(res[0][\"courseDate\"])&setSchoolId(res[0][\"schoolId\"])&setModifyComment(res[0][\"modifyComment\"]))\r\n  };\r\n\r\n  const handlePass = (event,_id) => {\r\n    event.preventDefault()\r\n    const textData = _id;\r\n    console.log({textData})    \r\n    \r\n    fetch('/registerCertificate', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({textData: textData})})\r\n      .then(res => res.json())        \r\n      .then(setOpen(false)&setSearched(false)&setSnackbarOpen(true)&setSnackbarMessage(\"Certificate Passed Id: \" + _id))\r\n    \r\n  }; \r\n\r\n  const handleModify = (event,_id) => {\r\n    event.preventDefault()\r\n    \r\n    fetch('/addModifyComment', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({_id: _id,modifyComment:modifyComment})})\r\n      .then(res => res.json())        \r\n      .then(setOpen(false)&setSearched(false)&setSnackbarOpen(true)&setSnackbarMessage(\"Certificate Modifing Id: \" + _id))\r\n      \r\n  }; \r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {     \r\n    console.log(\"hihihihi\")  \r\n    console.log(searched)   \r\n    if (!searched) {        \r\n      const textData = userId;\r\n      const searchType = \"9\"; \r\n\r\n      const rows_n = [];\r\n\r\n      fetch('/searchDB', {\r\n        method: 'POST',\r\n        headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({textData: textData, searchType: searchType})})        \r\n        .then(res => res.json())     \r\n        .then(res => res.forEach(function(obj) { rows_n.push(createData(obj.createdAt,obj.studentLName,obj.studentFName, obj.courseName, obj.schoolName, obj.courseDate, obj._id, obj.createrId,obj.modified)) }) )\r\n        .then(res => setRows(rows_n))\r\n        .then(setSearched(true))\r\n    }\r\n  });\r\n  \r\n  return(\r\n    <React.Fragment>\r\n    <Grid container md={12} justify=\"center\" alignItems=\"center\" className={classes.paper}>\r\n        <Grid item md={11}>\r\n    <div>\r\n        <div><h1>Modified Certificate</h1></div>\r\n        <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n            <TableRow>\r\n            <TableCell align=\"center\">Id</TableCell>\r\n            <TableCell align=\"center\">Created Data</TableCell>\r\n            <TableCell align=\"center\">Student Name</TableCell>\r\n            <TableCell align=\"center\">Course Name</TableCell>\r\n            <TableCell align=\"center\">School Name</TableCell>            \r\n            <TableCell align=\"center\">Course Finish Date</TableCell>\r\n            <TableCell align=\"center\">creatorID</TableCell>\r\n            <TableCell align=\"center\">Modified</TableCell>  \r\n            <TableCell align=\"center\">Audit</TableCell>  \r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            {rows.map((row) =>                           \r\n              <TableRow key={row._id} hover role=\"checkbox\">\r\n                  <TableCell align=\"center\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.createdAt}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.studentLName + \" \" + row.studentFName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.courseName}</TableCell>\r\n                  <TableCell align=\"center\">{row.schoolName}</TableCell>\r\n                  <TableCell align=\"center\">{row.courseDate}</TableCell>\r\n                  <TableCell align=\"center\">{row.createrId}</TableCell>\r\n                  <TableCell align=\"center\">                    \r\n                    <Checkbox\r\n                      checked={(row.modified)}\r\n                      color=\"primary\"\r\n                      inputProps={{ 'aria-label': 'secondary checkbox',readOnly: true }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={(event) => handleClickOpen(event, row)} disabled={!(row.modified)}>\r\n                      Audit   \r\n                    </Button>\r\n                  </TableCell>\r\n              </TableRow>\r\n            )}\r\n        </TableBody>\r\n        </Table>\r\n    </TableContainer>\r\n        \r\n    </div>     \r\n    </Grid>                \r\n    </Grid>  \r\n    \r\n      <Dialog\r\n        fullWidth={\"md\"}\r\n        maxWidth={\"lg\"}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent className={classes.Dialog}>\r\n          <form className={classes.form} noValidate>\r\n          <Grid container md={12} className={classes.paper}>\r\n            <Grid item md={5} className={classes.form}>\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} align=\"left\">\r\n                <Typography variant={'h6'} color={'primary'}>\r\n                Certificate information:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} align=\"left\">\r\n                <TextField\r\n                    autoComplete=\"certificateId\"\r\n                    name=\"certificateId\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={_id}\r\n                    id=\"certificateId\"\r\n                    label=\"Certificate Id\"       \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"studentLName\"\r\n                    name=\"lName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentLName}\r\n                    id=\"studentLName\"\r\n                    label=\"Student Last Name\"       \r\n                    onChange={e => setStudentLName(e.target.value)} \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}   \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"studentFName\"\r\n                    name=\"fName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentFName}\r\n                    id=\"studentFName\"\r\n                    label=\"Student First Name\"     \r\n                    onChange={e => setStudentFName(e.target.value)} \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}             \r\n                  />\r\n                </Grid>            \r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    autoComplete=\"studentID\"\r\n                    name=\"studentID\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentID}\r\n                    id=\"studentID\"\r\n                    label=\"Student ID\"     \r\n                    onChange={e => setStudentID(e.target.value)}   \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}             \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"courseName\"\r\n                    label=\"Course Name\"\r\n                    name=\"courseName\"\r\n                    value={courseName}\r\n                    onChange={e => setCourseName(e.target.value)}   \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"schoolName\"\r\n                    label=\"school Name\"\r\n                    name=\"schoolName\"\r\n                    value={schoolName}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"finishDate\"\r\n                    label=\"Course Finish Date\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    value={finishDate}\r\n                    onChange={e => setFinishDate(e.target.value)}  \r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              \r\n            </Grid>  \r\n            <Grid item md={5} className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography variant={'h6'} color={'primary'}>\r\n                Comment form admin:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12}>\r\n                  <TextareaAutosize\r\n                    rowsMin={15}\r\n                    className={classes.textArea}\r\n                    value={modifyComment}\r\n                    onChange={e => setModifyComment(e.target.value)}                 \r\n                    aria-label=\"maximum height\"\r\n                    placeholder={\"Plase input problem description \" + \"\\n\" + \"If certificate information need to modify\"}\r\n                  />\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={(event) => handlePass(event, _id)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                >\r\n                  pass\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={6} sm={6}>\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={(event) => handleModify(event, _id)}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                >\r\n                  Modify\r\n                </Button>\r\n              </Grid>\r\n              </Grid>              \r\n            </Grid> \r\n          </Grid>   \r\n              \r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={snackbarOpen}\r\n        autoHideDuration={6000}\r\n        onClose={handleSnackbarClose}\r\n        message={snackbarMessage}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleSnackbarClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </React.Fragment>\r\n\r\n);\r\n}","C:\\Users\\alan\\fyp\\client\\src\\Worker_PublishedCertificate.js",["452","453","454","455","456","457","458"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Worker_PublishedCertificate_component from './Worker_PublishedCertificate_component';\r\nimport Worker_upperlistItems from './Worker_upperlistItems';\r\nimport Worker_lowerlistItems from './Worker_lowerlistItems';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Worker_PublishedCertificate() {\r\n  const location = useLocation();\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  useEffect(() => {\r\n\r\n    console.log({userId})\r\n    console.log({userName})\r\n  });\r\n\r\n  const handleClick2Home = () => {\r\n    history.push({ \r\n        pathname: '/Worker',\r\n        state: { userId: userId,userName: userName}\r\n    });    \r\n  };\r\n\r\n  const handleClick2Logout = () => {\r\n    history.push({ \r\n        pathname: '/Login'\r\n    });    \r\n  };\r\n\r\n\r\n/*\r\n  useEffect(() => {\r\n    if(id=='' || userName=='') {\r\n      history.push('/Login');\r\n    }\r\n  });\r\n*/\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}  onClick={handleClick2Home}>\r\n            Dashboard\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h6\" align=\"right\" color=\"inherit\" noWrap className={classes.title}>\r\n            hi {userName}\r\n          </Typography>\r\n          <Tooltip title=\"Logout\" aria-label=\"Logout\" onClick={handleClick2Logout}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ExitToAppIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><Worker_upperlistItems userId={userId} userName={userName} /></List>\r\n        <Divider />\r\n        <List><Worker_lowerlistItems userId={userId} userName={userName} /></List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>        \r\n       \r\n          <Grid container spacing={3}>\r\n            {/* CreateCertificate_component */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper>\r\n              \r\n              <Worker_PublishedCertificate_component />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\alan\\fyp\\client\\src\\Worker_PublishedCertificate_component.js",["459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CreateCertificate_component from './CreateCertificate_component';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  }, \r\n  Dialog: {\r\n    height : \"80vh\",\r\n  },  \r\n  form: {\r\n    height : \"100%\",\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textArea:{\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nfunction createData(createdAt,studentName, courseName, schoolName, courseDate,_id) {\r\n  return { createdAt,studentName, courseName, schoolName, courseDate, _id };\r\n}\r\n\r\nexport default function Worker_PublishedCertificate_component() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const [rows, setRows] = React.useState([]);\r\n  const [searched, setSearched] = React.useState(false);\r\n  const [schoolName, setSchoolName] = React.useState(\"\");\r\n  const [schoolId, setSchoolId] = React.useState(\"\");\r\n  const [studentName, setStudentName] = React.useState(\"\");\r\n  const [studentFName, setStudentFName] = React.useState(\"\");\r\n  const [studentLName, setStudentLName] = React.useState(\"\");\r\n  const [courseName, setCourseName] = React.useState(\"\");\r\n  const [modifyComment, setModifyComment] = React.useState(\"\");\r\n  const [fName, setfName] = React.useState(\"\");\r\n  const [auditorId, serAuditorId] = React.useState(\"\");\r\n  const [finishDate, setFinishDate] = React.useState(\"\");\r\n  const [createrId, setCreaterId] = React.useState(\"\");\r\n  const [transationHash, serTransationId] = React.useState(\"\");\r\n  const [certificateHash, serCertificateHash] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [_id, set_id] = React.useState(\"\");\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [studentID, setStudentID] = React.useState(\"\");\r\n\r\n  const handleClickOpen = (event, row) => {\r\n    setOpen(true);\r\n    const textData = row._id;\r\n    const searchType = \"7\"; \r\n\r\n    fetch('/searchDB', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({textData: textData, searchType: searchType})})\r\n      .then(res => res.json())        \r\n      .then(res => setStudentID(studentID)&set_id(textData)&serTransationId(res[0][\"transationId\"])&serCertificateHash(res[0][\"hash\"])&serAuditorId(res[0][\"auditorId\"])&setCreaterId(res[0][\"createrId\"])&setStudentLName(res[0][\"studentLName\"])&setStudentFName(res[0][\"studentFName\"])&setCourseName(res[0][\"courseName\"])&setSchoolName(res[0][\"schoolName\"])&setFinishDate(res[0][\"courseDate\"])&setSchoolId(res[0][\"schoolId\"])&setModifyComment(res[0][\"modifyComment\"]))\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {        \r\n    if (!searched) {        \r\n      const textData = userId;\r\n      const searchType = \"10\"; \r\n\r\n      const rows_n = [];\r\n\r\n      fetch('/searchDB', {\r\n        method: 'POST',\r\n        headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({textData: textData, searchType: searchType})})\r\n        .then(res => res.json())      \r\n        .then(res => res.forEach(function(obj) { rows_n.push(createData(obj.createdAt,obj.studentName, obj.courseName, obj.schoolName, obj.courseDate, obj._id)) }) )\r\n        .then(res => setRows(rows_n))\r\n        .then(setSearched(true))\r\n    }\r\n  });\r\n  \r\n  return(\r\n    <React.Fragment>\r\n    <Grid container md={12} justify=\"center\" alignItems=\"center\" className={classes.paper}>\r\n        <Grid item md={11}>\r\n    <div>\r\n        <div><h1>Published Certificate</h1></div>\r\n        <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n            <TableRow>\r\n            <TableCell align=\"center\">id</TableCell>\r\n            <TableCell align=\"center\">Created Data</TableCell>\r\n            <TableCell align=\"center\">Student Name</TableCell>\r\n            <TableCell align=\"center\">Course Name</TableCell>\r\n            <TableCell align=\"center\">School Name</TableCell>            \r\n            <TableCell align=\"center\">Course Finish Date</TableCell>        \r\n            <TableCell align=\"center\">Detail</TableCell>  \r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            {rows.map((row) =>                           \r\n              <TableRow key={row._id} hover role=\"checkbox\">\r\n                  <TableCell align=\"center\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.createdAt}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.studentName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.courseName}</TableCell>\r\n                  <TableCell align=\"center\">{row.schoolName}</TableCell>\r\n                  <TableCell align=\"center\">{row.courseDate}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={(event) => handleClickOpen(event, row)}>\r\n                      Detail  \r\n                    </Button>\r\n                  </TableCell>\r\n              </TableRow>\r\n            )}\r\n        </TableBody>\r\n        </Table>\r\n    </TableContainer>\r\n        \r\n    </div>     \r\n    </Grid>                \r\n    </Grid>  \r\n    \r\n      <Dialog\r\n        fullWidth={\"md\"}\r\n        maxWidth={\"lg\"}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Certificate Detail</DialogTitle>\r\n        <DialogContent className={classes.Dialog}>\r\n          <form className={classes.form} noValidate>\r\n          <Grid container md={12} className={classes.paper}>\r\n            <Grid item md={5} className={classes.form}>\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} align=\"left\">\r\n                <Typography variant={'h6'} color={'primary'}>\r\n                Certificate information:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} align=\"left\">\r\n                <TextField\r\n                    autoComplete=\"certificateId\"\r\n                    name=\"certificateId\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={_id}\r\n                    id=\"certificateId\"\r\n                    label=\"Certificate Id\"       \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"studentLName\"\r\n                    name=\"lName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentLName}\r\n                    id=\"studentLName\"\r\n                    label=\"Student Last Name\"       \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}    \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"studentFName\"\r\n                    name=\"fName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentFName}\r\n                    id=\"studentFName\"\r\n                    label=\"Student First Name\"     \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}              \r\n                  />\r\n                </Grid>           \r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    autoComplete=\"studentID\"\r\n                    name=\"studentID\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentID}\r\n                    id=\"studentID\"\r\n                    label=\"Student ID\"     \r\n                    onChange={e => setStudentID(e.target.value)}   \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}             \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"courseName\"\r\n                    label=\"Course Name\"\r\n                    name=\"courseName\"\r\n                    value={courseName}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}  \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"schoolName\"\r\n                    label=\"school Name\"\r\n                    name=\"schoolName\"\r\n                    value={schoolName}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"finishDate\"\r\n                    label=\"Course Finish Date\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    value={finishDate}\r\n                    onChange={e => setFinishDate(e.target.value)}  \r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              \r\n            </Grid>  \r\n            <Grid item md={5} className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography variant={'h6'} color={'primary'}>\r\n                Creator and Auditor Id:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"creatorId\"\r\n                    name=\"creatorId\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={createrId}\r\n                    id=\"creatorId\"\r\n                    label=\"Creator Id\"       \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}   \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"auditorId\"\r\n                    name=\"auditorId\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={auditorId}\r\n                    id=\"auditorId\"\r\n                    label=\"Auditor Id\"     \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}              \r\n                  />\r\n                </Grid>   \r\n                <Grid item xs={12} sm={12}>\r\n                  <Typography variant={'h6'} color={'primary'}>\r\n                  Certificate Hash:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} align=\"left\">\r\n                <TextField\r\n                    autoComplete=\"certificateHash\"\r\n                    name=\"certificateHash\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={certificateHash}\r\n                    id=\"certificateHash\"    \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Typography variant={'h6'} color={'primary'}>\r\n                  Transation Hash:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} align=\"left\">\r\n                  <TextareaAutosize\r\n                    rowsMin={6}\r\n                    className={classes.textArea}\r\n                    value={transationHash}              \r\n                    aria-label=\"maximum height\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>              \r\n            </Grid> \r\n          </Grid>   \r\n              \r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n\r\n);\r\n}","C:\\Users\\alan\\fyp\\client\\src\\Admin_PublishedCertificate.js",["486","487","488","489","490","491","492"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Admin_PublishedCertificate_component from './Admin_PublishedCertificate_component';\r\nimport Admin_upperlistItems from './Admin_upperlistItems';\r\nimport Admin_lowerlistItems from './Admin_lowerlistItems';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function Admin_PublishedCertificate() {\r\n  const location = useLocation();\r\n  const history = useHistory()\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const handleClick2Home = () => {\r\n    history.push({ \r\n        pathname: '/Admin',\r\n        state: { userId: userId,userName: userName}\r\n    });    \r\n  };\r\n\r\n  const handleClick2Logout = () => {\r\n    history.push({ \r\n        pathname: '/Login'\r\n    });    \r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    console.log({userId})\r\n    console.log({userName})\r\n  });\r\n/*\r\n  useEffect(() => {\r\n    if(id=='' || userName=='') {\r\n      history.push('/Login');\r\n    }\r\n  });\r\n*/\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title} onClick={handleClick2Home}>\r\n            Dashboard\r\n          </Typography>\r\n          <Typography component=\"h1\" variant=\"h6\" align=\"right\" color=\"inherit\" noWrap className={classes.title}>\r\n            hi {userName}\r\n          </Typography>\r\n          <Tooltip title=\"Logout\" aria-label=\"Logout\" onClick={handleClick2Logout}>\r\n            <IconButton color=\"inherit\">\r\n              <Badge color=\"secondary\">\r\n                <ExitToAppIcon/>\r\n              </Badge>\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List><Admin_upperlistItems userId={userId} userName={userName} /></List>\r\n        <Divider />\r\n        <List><Admin_lowerlistItems userId={userId} userName={userName} /></List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>        \r\n       \r\n          <Grid container spacing={3}>\r\n            {/* CreateCertificate_component */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper>\r\n              \r\n              <Admin_PublishedCertificate_component />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","C:\\Users\\alan\\fyp\\client\\src\\Admin_PublishedCertificate_component.js",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport CreateCertificate_component from './CreateCertificate_component';\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  }, \r\n  Dialog: {\r\n    height : \"80vh\",\r\n  },  \r\n  form: {\r\n    height : \"100%\",\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  textArea:{\r\n    width: '100%',\r\n  }\r\n}));\r\n\r\nfunction createData(createdAt,studentName, courseName, schoolName, courseDate,_id,createrId) {\r\n  return { createdAt,studentName, courseName, schoolName, courseDate, _id ,createrId};\r\n}\r\n\r\nexport default function Admin_PublishedCertificate_component() {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const { userId } = location.state || { userId: '' };\r\n  const { userName } = location.state || { userName: '' };\r\n  const [rows, setRows] = React.useState([]);\r\n  const [searched, setSearched] = React.useState(false);\r\n  const [schoolName, setSchoolName] = React.useState(\"\");\r\n  const [schoolId, setSchoolId] = React.useState(\"\");\r\n  const [studentName, setStudentName] = React.useState(\"\");\r\n  const [studentFName, setStudentFName] = React.useState(\"\");\r\n  const [studentLName, setStudentLName] = React.useState(\"\");\r\n  const [courseName, setCourseName] = React.useState(\"\");\r\n  const [modifyComment, setModifyComment] = React.useState(\"\");\r\n  const [fName, setfName] = React.useState(\"\");\r\n  const [auditorId, serAuditorId] = React.useState(\"\");\r\n  const [finishDate, setFinishDate] = React.useState(\"\");\r\n  const [createrId, setCreaterId] = React.useState(\"\");\r\n  const [transationHash, serTransationId] = React.useState(\"\");\r\n  const [certificateHash, serCertificateHash] = React.useState(\"\");\r\n  const [open, setOpen] = React.useState(false);\r\n  const [_id, set_id] = React.useState(\"\");\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [studentID, setStudentID] = React.useState(\"\");\r\n\r\n  const handleClickOpen = (event, row) => {\r\n    setOpen(true);\r\n    const textData = row._id;\r\n    const searchType = \"7\"; \r\n\r\n    fetch('/searchDB', {\r\n      method: 'POST',\r\n      headers: {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({textData: textData, searchType: searchType})})\r\n      .then(res => res.json())        \r\n      .then(res => setStudentID(studentID)&set_id(textData)&serTransationId(res[0][\"transationId\"])&serCertificateHash(res[0][\"hash\"])&serAuditorId(res[0][\"auditorId\"])&setCreaterId(res[0][\"createrId\"])&setStudentLName(res[0][\"studentLName\"])&setStudentFName(res[0][\"studentFName\"])&setCourseName(res[0][\"courseName\"])&setSchoolName(res[0][\"schoolName\"])&setFinishDate(res[0][\"courseDate\"])&setSchoolId(res[0][\"schoolId\"])&setModifyComment(res[0][\"modifyComment\"]))\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {        \r\n    if (!searched) {        \r\n      const textData = userId;\r\n      const searchType = \"11\"; \r\n\r\n      const rows_n = [];\r\n\r\n      fetch('/searchDB', {\r\n        method: 'POST',\r\n        headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({textData: textData, searchType: searchType})})\r\n        .then(res => res.json())      \r\n        .then(res => res.forEach(function(obj) { rows_n.push(createData(obj.createdAt,obj.studentName, obj.courseName, obj.schoolName, obj.courseDate, obj._id, obj.createrId)) }) )\r\n        .then(res => setRows(rows_n))\r\n        .then(setSearched(true))\r\n    }\r\n  });\r\n  \r\n  return(\r\n    <React.Fragment>\r\n    <Grid container md={12} justify=\"center\" alignItems=\"center\" className={classes.paper}>\r\n        <Grid item md={11}>\r\n    <div>\r\n        <div><h1>Published Certificate</h1></div>\r\n        <TableContainer component={Paper}>\r\n        <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n            <TableRow>\r\n            <TableCell align=\"center\">id</TableCell>\r\n            <TableCell align=\"center\">Created Data</TableCell>\r\n            <TableCell align=\"center\">Student Name</TableCell>\r\n            <TableCell align=\"center\">Course Name</TableCell>\r\n            <TableCell align=\"center\">School Name</TableCell>            \r\n            <TableCell align=\"center\">Course Finish Date</TableCell>  \r\n            <TableCell align=\"center\">Creator Id</TableCell>                    \r\n            <TableCell align=\"center\">Detail</TableCell>  \r\n            </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n            {rows.map((row) =>                           \r\n              <TableRow key={row._id} hover role=\"checkbox\">\r\n                  <TableCell align=\"center\">\r\n                    {row._id}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.createdAt}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.studentName}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.courseName}</TableCell>\r\n                  <TableCell align=\"center\">{row.schoolName}</TableCell>\r\n                  <TableCell align=\"center\">{row.courseDate}</TableCell>\r\n                  <TableCell align=\"center\">{row.createrId}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={(event) => handleClickOpen(event, row)}>\r\n                      Detail  \r\n                    </Button>\r\n                  </TableCell>\r\n              </TableRow>\r\n            )}\r\n        </TableBody>\r\n        </Table>\r\n    </TableContainer>\r\n        \r\n    </div>     \r\n    </Grid>                \r\n    </Grid>  \r\n    \r\n      <Dialog\r\n        fullWidth={\"md\"}\r\n        maxWidth={\"lg\"}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Certificate Detail</DialogTitle>\r\n        <DialogContent className={classes.Dialog}>\r\n          <form className={classes.form} noValidate>\r\n          <Grid container md={12} className={classes.paper}>\r\n            <Grid item md={5} className={classes.form}>\r\n              <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12} align=\"left\">\r\n                <Typography variant={'h6'} color={'primary'}>\r\n                Certificate information:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={12} align=\"left\">\r\n                <TextField\r\n                    autoComplete=\"certificateId\"\r\n                    name=\"certificateId\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={_id}\r\n                    id=\"certificateId\"\r\n                    label=\"Certificate Id\"       \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"studentLName\"\r\n                    name=\"lName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentLName}\r\n                    id=\"studentLName\"\r\n                    label=\"Student Last Name\"       \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}    \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"studentFName\"\r\n                    name=\"fName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentFName}\r\n                    id=\"studentFName\"\r\n                    label=\"Student First Name\"     \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}              \r\n                  />\r\n                </Grid>        \r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    autoComplete=\"studentID\"\r\n                    name=\"studentID\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={studentID}\r\n                    id=\"studentID\"\r\n                    label=\"Student ID\"     \r\n                    onChange={e => setStudentID(e.target.value)}   \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}             \r\n                  />\r\n                </Grid>    \r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"courseName\"\r\n                    label=\"Course Name\"\r\n                    name=\"courseName\"\r\n                    value={courseName}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}  \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"schoolName\"\r\n                    label=\"school Name\"\r\n                    name=\"schoolName\"\r\n                    value={schoolName}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    id=\"finishDate\"\r\n                    label=\"Course Finish Date\"\r\n                    type=\"date\"\r\n                    fullWidth\r\n                    className={classes.textField}\r\n                    value={finishDate}\r\n                    onChange={e => setFinishDate(e.target.value)}  \r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              \r\n            </Grid>  \r\n            <Grid item md={5} className={classes.form}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={12}>\r\n                <Typography variant={'h6'} color={'primary'}>\r\n                Creator and Auditor Id:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"creatorId\"\r\n                    name=\"creatorId\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={createrId}\r\n                    id=\"creatorId\"\r\n                    label=\"Creator Id\"       \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}   \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    autoComplete=\"auditorId\"\r\n                    name=\"auditorId\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={auditorId}\r\n                    id=\"auditorId\"\r\n                    label=\"Auditor Id\"     \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}              \r\n                  />\r\n                </Grid>   \r\n                <Grid item xs={12} sm={12}>\r\n                  <Typography variant={'h6'} color={'primary'}>\r\n                  Certificate Hash:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} align=\"left\">\r\n                <TextField\r\n                    autoComplete=\"certificateHash\"\r\n                    name=\"certificateHash\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={certificateHash}\r\n                    id=\"certificateHash\"    \r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Typography variant={'h6'} color={'primary'}>\r\n                  Transation Hash:\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} align=\"left\">\r\n                  <TextareaAutosize\r\n                    rowsMin={6}\r\n                    className={classes.textArea}\r\n                    value={transationHash}              \r\n                    aria-label=\"maximum height\"\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>              \r\n            </Grid> \r\n          </Grid>   \r\n              \r\n          </form>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </React.Fragment>\r\n\r\n);\r\n}","C:\\Users\\alan\\fyp\\client\\src\\Index_Header.js",["520","521","522","523","524"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    alignItems: \"center\",    \n    marginLeft: \"auto\"\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    marginTop: theme.spacing(2),\n    flexShrink: 0,\n    color:\"#AEAEAE\"\n    \n  },\n  toolbarLink2: {\n    padding: theme.spacing(1),\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(5),\n    marginTop: theme.spacing(2),\n    flexShrink: 0,    \n    marginLeft: \"auto\",    \n    \n  },\n}));\n\nexport default function Index_Header() {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <Link \n            onClick={() => {\n              history.push({ \n                pathname: '/'\n              });    \n            }}\n            color=\"inherit\"\n            noWrap\n            variant=\"body2\"\n            className={classes.toolbarLink2}>\n          Home\n        </Link>\n        <Link \n            onClick={() => {\n              history.push({ \n                pathname: '/Search'\n              });    \n            }}\n            color=\"inherit\"\n            noWrap\n            variant=\"body2\"\n            className={classes.toolbarLink}>\n          Search\n        </Link>\n        <Link \n            onClick={() => {\n              history.push({ \n                pathname: '/Login'\n              });    \n            }}\n            color=\"inherit\"\n            noWrap\n            variant=\"body2\"\n            className={classes.toolbarLink}>\n          Login\n        </Link>\n      </Toolbar>      \n    </React.Fragment>\n  );\n}\n","C:\\Users\\alan\\fyp\\client\\src\\Index_Footer.js",["525","526","527"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport IconButton from '@material-ui/core/IconButton';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport Index_Header from './Index_Header';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    // marginTop: theme.spacing(8),\n    paddingBottom: theme.spacing(6),\n  },\n  makeItCenter: {\n    marginLeft:'auto',\n    marginRight:'auto',\n  },\n  copyright: {\n    paddingTop: theme.spacing(2),\n  },\n}));\n\nexport default function Index_Footer() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          <Index_Header/>\n        </Typography>\n        <Grid  container  md={12} justify=\"center\" alignItems=\"center\">\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <FacebookIcon />\n        </IconButton>\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <TelegramIcon />\n        </IconButton>\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <TwitterIcon />\n        </IconButton>\n        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n          <WhatsAppIcon />\n        </IconButton>\n        </Grid>\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\" className={classes.copyright}>\n          {'Copyright © '}\n        </Typography>\n      </Container>\n    </footer>      \n    </React.Fragment>\n  );\n}\n","C:\\Users\\alan\\fyp\\client\\src\\Student.js",["528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546"],"import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport web3 from 'web3';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Flip  from 'react-reveal/Flip';\r\nimport Index_Header from './Index_Header';\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction createData(studentName, courseName, schoolName, courseDate, publishDate, hash, hashSignature, transationId, _id,schoolId) {\r\n    return {\r\n        studentName,\r\n        courseName,\r\n        schoolName,\r\n        courseDate,\r\n        publishDate,\r\n        hash,\r\n        hashSignature,\r\n        transationId,\r\n        _id,\r\n        schoolId\r\n    };\r\n}\r\n\r\nclass Student extends React.Component {\r\n    state = {\r\n        textData: null,\r\n        id: null,\r\n        rows: [],\r\n        transactionHash: null,\r\n        transactionAccount: null,\r\n        transactionData: null,\r\n        databaseResultHash: null,\r\n        open: false,\r\n        searchDBResult: null,\r\n        correctness_Hash: \"false\",\r\n        correctness_HashSignature: \"false\",\r\n        correctness_TransactionAccount: \"false\",\r\n        check_correctness_Hash: \"false\",\r\n        check_correctness_HashSignature: \"false\",\r\n        check_correctness_TransactionAccount: \"false\",\r\n        get_DataHash: \"false\",\r\n        fileDownloadUrl: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const  userId = this.props.location.state.userId || { userId: '' };\r\n        const  userName = this.props.location.state.userName || { userName: '' };\r\n        const rows_n = [];\r\n\r\n        console.log(userId)\r\n\r\n        fetch('/searchDB', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n                body: JSON.stringify({searchType: \"12\", textData: userId})\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => res.forEach(function (obj) {\r\n                rows_n.push(createData(obj.studentName, obj.courseName, obj.schoolName, obj.courseDate, obj.publishDate, obj.hash, obj.hashSignature, obj.transationId, obj._id, obj.schoolId))\r\n            }))\r\n            .then(res => this.setState(state => ({rows: rows_n})))\r\n            .then(res => this.setState(state => ({transactionHash: rows_n[0][\"transationId\"], textData: rows_n[0][\"_id\"],})))\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n\r\n        console.log(\"componentDidUpdate\")\r\n\r\n        if (this.state.transactionHash != null && this.state.transactionAccount == null) {\r\n            console.log(\"1111\")\r\n            fetch('/getTransactionReceipt', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({transactionHash: this.state.transactionHash})\r\n            }).then(res => res.json())\r\n            // .then(res => console.log(res.logs[0][\"data\"])) .then(res => console.log(res))\r\n                .then(res => this.setState(state => ({transactionAccount: res.from, transactionData: res.logs[0][\"data\"]\r\n                //testTeam:matchfindresponse.team1.name, matchIdChanged: false\r\n            }))).then(console.log(\"transactionData: \" + this.state.transactionData));\r\n        }\r\n\r\n        if (this.state.searchDBResult != null) {\r\n            console.log(\"searchDBResultYYYY\")\r\n        } else {\r\n            console.log(\"searchDBResultBBBB\")\r\n            console.log(\"searchDBResult: \" + this.state.searchDBResult)\r\n        }\r\n\r\n        if (this.state.get_DataHash == \"false\") {\r\n            console.log(\"get_DataHashYYYY\")\r\n        } else {\r\n            console.log(\"get_DataHashBBBB\")\r\n        }\r\n\r\n        if (this.state.searchDBResult != null && this.state.get_DataHash == \"false\") {\r\n            console.log(\"222222\")\r\n            fetch('/getHash', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                    body: JSON.stringify({textData: this.state.searchDBResult})\r\n                })\r\n                .then(res => res.text())\r\n                .then(res => this.setState(state => ({databaseResultHash: res})))\r\n                .then(res => this.setState(state => ({get_DataHash: \"ture\"})))\r\n                .then(console.log(\"transactionData: \" + this.state.transactionData))\r\n                .then(console.log(\"databaseResultHash: \" + web3.utils.asciiToHex(this.state.databaseResultHash)))\r\n        }\r\n\r\n        if (web3.utils.asciiToHex(this.state.databaseResultHash) == this.state.transactionData && this.state.check_correctness_Hash == \"false\") {\r\n            this.setState(state => ({correctness_Hash: \"true\"}))\r\n            this.setState(state => ({check_correctness_Hash: \"true\"}))\r\n            console.log(\"true\")\r\n        }\r\n\r\n        if (this.state.databaseResultHash != null && this.state.correctness_HashSignature == \"false\" && this.state.check_correctness_HashSignature == \"false\") {\r\n            fetch('/verifyHash', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                    body: JSON.stringify({schoolId: this.state.rows[0][\"schoolId\"], textData: this.state.databaseResultHash, signature: this.state.rows[0][\"hashSignature\"]\r\n                })\r\n                })\r\n                .then(res => res.text())\r\n                .then(res => this.setState(state => ({correctness_HashSignature: res})))\r\n                .then(res => this.setState(state => ({check_correctness_HashSignature: \"true\"})))\r\n        }\r\n\r\n        if (this.state.transactionAccount != null && this.state.correctness_TransactionAccount == \"false\" && this.state.check_correctness_TransactionAccount == \"false\") {\r\n            fetch('/checkAccount', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                    body: JSON.stringify({\r\n                        //textData: this.state.transactionAccount\r\n                        textData: this.state.transactionAccount,\r\n                        schoolId: this.state.rows[0][\"schoolId\"]\r\n                    })\r\n                })\r\n                .then(res => res.text())\r\n                .then(res => this.setState(state => ({correctness_TransactionAccount: res})))\r\n                .then(res => this.setState(state => ({check_correctness_TransactionAccount: \"true\"})))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const hero = {\r\n            backgroundImage:\"linear-gradient(rgba(0, 0, 0, 0.5),rgba(0, 0, 0, 0.5)),url('https://images.pexels.com/photos/169677/pexels-photo-169677.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\", \r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center Bottom\",\r\n            backgroundRepeat: \"noRepeat\",\r\n            backgroundAttachment: \"fixed\",\r\n            color: \"#fff\",\r\n            width: \"101vw\",\r\n            marginLeft:'-8px',\r\n            marginTop:'-8px',\r\n        };\r\n\r\n        const makeIt123 = {\r\n            marginTop:'40px',\r\n            marginBottom:'40px'\r\n        };\r\n\r\n        const hihihi = {\r\n            marginLeft:'auto',\r\n            marginRight:'auto',\r\n            marginTop:'12.5vh',\r\n            marginBottom:'12.5vh'\r\n        };  \r\n\r\n        const makeItCenter = {\r\n            marginLeft:'auto',\r\n            marginRight:'auto',\r\n        };\r\n\r\n        const mystyle = {\r\n            display: \"block\",\r\n            whiteSpace: 'nowrap',\r\n            textOverflow: \"ellipsis\"\r\n        };\r\n\r\n        const TableRowColumnStyle = {\r\n            whiteSpace: 'nowrap',\r\n            wordWrap: 'break-word'\r\n        };\r\n\r\n        const buttonStyle = {\r\n            display: \"inline\",\r\n            marginLeft: \"5px\"\r\n        };\r\n\r\n        const modal = {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center'\r\n        }\r\n        const paper = {\r\n            background: \"white\",\r\n            border: '2px solid #000',\r\n            boxShadow: \"5px\",\r\n            padding: \"0px 30px 50px 30px\"\r\n        }\r\n\r\n        const toolbar = {\r\n            alignItems: \"center\",    \r\n            marginLeft: \"auto\"\r\n        }\r\n\r\n        const toolbarTitle= {\r\n            flex: 1,\r\n        }\r\n\r\n        const toolbarSecondary= {\r\n            justifyContent: 'space-between',\r\n            overflowX: 'auto',\r\n        }\r\n\r\n        const toolbarLink= {\r\n            padding: \"10px\",\r\n            paddingLeft: \"25px\",\r\n            paddingRight: \"25px\",\r\n            marginTop: \"20px\",\r\n            flexShrink: \"0\",\r\n            color:\"#AEAEAE\",\r\n            textDecoration: \"none\" \r\n        }\r\n\r\n        const toolbarLink2= {\r\n            padding: \"10px\",\r\n            paddingLeft: \"50px\",\r\n            paddingRight: \"50px\",\r\n            marginTop: \"20px\",\r\n            flexShrink: \"0\",    \r\n            marginLeft: \"auto\",    \r\n            color:\"#FFF\",   \r\n            textDecoration: \"none\"     \r\n        }\r\n\r\n        const userName = this.props.location.state.userName\r\n\r\n        const handleOpen = () => {\r\n            console.log(this.state.rows[0][\"_id\"])\r\n            this.setState(state => ({open: true}));\r\n            fetch('/searchDB', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({textData: this.state.rows[0][\"_id\"], searchType: \"4\"})\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => this.setState(state => ({searchDBResult: res})));\r\n\r\n        };\r\n\r\n        const handleClose = () => {\r\n            this.setState(state => ({open: false}));\r\n        };\r\n\r\n        const handleDownload = () => {\r\n            let output;\r\n            output = JSON.stringify(this.state.rows);\r\n            // Download it\r\n            const blob = new Blob([output]);\r\n            const fileDownloadUrl = URL.createObjectURL(blob);\r\n            this.setState ({fileDownloadUrl: fileDownloadUrl}, \r\n              () => {\r\n                this.dofileDownload.click(); \r\n                URL.revokeObjectURL(fileDownloadUrl);  // free up storage--no longer needed.\r\n                this.setState({fileDownloadUrl: \"\"})\r\n            })    \r\n          };\r\n\r\n\r\n        return (\r\n            <Grid container md={12} justify=\"center\" alignItems=\"center\">\r\n                <Paper style={hero}> \r\n                <div style={hero}>\r\n\r\n                        <Grid item md={8} style={makeItCenter} spacing={0}>\r\n                        <Toolbar style={toolbar}>\r\n                            <Link\r\n                                color=\"inherit\"\r\n                                noWrap\r\n                                variant=\"body2\"\r\n                                style={toolbarLink2}\r\n                                onClick={event => event.preventDefault()}>\r\n                            {\"Hi  \" + userName}\r\n                            </Link>\r\n                            <Link \r\n                                onClick={() => {\r\n                                this.props.history.push({ \r\n                                    pathname: '/Login'\r\n                                });    \r\n                                }}\r\n                                color=\"inherit\"\r\n                                noWrap\r\n                                variant=\"body2\"\r\n                                underlineHover\r\n                                style={toolbarLink}>\r\n                            Logout\r\n                            </Link>\r\n                        </Toolbar>\r\n                        </Grid>\r\n                        <Grid item md={8} style={hihihi} spacing={0}>\r\n                            <div>\r\n                                <Typography component=\"h1\" variant=\"h3\" color=\"inherit\" align=\"center\" style={makeIt123}>\r\n                                    <Flip left cascade>\r\n                                    Certificate Data   \r\n                                    </Flip>                                                  \r\n                                </Typography>\r\n                            </div>                 \r\n                        </Grid>       \r\n                </div>            \r\n                </Paper>\r\n                <Grid item md={8}>\r\n                    <div style={makeIt123}>\r\n                        <TableContainer component={Paper} style={mystyle}>\r\n                            <Table aria-label=\"simple table\">\r\n                                {this\r\n                                    .state\r\n                                    .rows\r\n                                    .map((row) => (\r\n                                        <TableBody>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Student Name:</TableCell>\r\n                                                <TableCell align=\"left\">{row.studentName}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Course Name:</TableCell>\r\n                                                <TableCell align=\"left\">{row.courseName}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">School Name:</TableCell>\r\n                                                <TableCell align=\"left\">{row.schoolName}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Course Finish Date:</TableCell>\r\n                                                <TableCell align=\"left\">{row.courseDate}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Data Insert Date:</TableCell>\r\n                                                <TableCell align=\"left\">{row.publishDate}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Data Hash:</TableCell>\r\n                                                <TableCell align=\"left\">{row.hash}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Hash Signature:</TableCell>\r\n\r\n                                                <TableCell maxWidth=\"50px\" align=\"left\">\r\n                                                    {row\r\n                                                        .hashSignature\r\n                                                        .substring(0, row.hashSignature.length / 2)}\r\n                                                </TableCell>\r\n\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\"></TableCell>\r\n\r\n                                                <TableCell maxWidth=\"50px\" align=\"left\">\r\n                                                    {row\r\n                                                        .hashSignature\r\n                                                        .substring(row.hashSignature.length / 2, row.hashSignature.length)}\r\n                                                </TableCell>\r\n\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Transaction Account:</TableCell>\r\n                                                <TableCell align=\"left\">{this.state.transactionAccount}</TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\">Transaction Id:</TableCell>\r\n                                                <TableCell align=\"left\">\r\n                                                    <a target=\"_blank\" href={\"https://ropsten.etherscan.io/tx/\" + row.transationId}>{row.transationId}</a>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                            <TableRow style={TableRowColumnStyle}>\r\n                                                <TableCell align=\"center\"></TableCell>\r\n                                                <TableCell align=\"right\">\r\n                                                    <Button variant=\"contained\" color=\"primary\" style={buttonStyle} onClick={handleDownload}>Get Json</Button>\r\n                                                    <a hidden = \"true\"\r\n                                                        download=\"Certificate.json\"\r\n                                                        href={this.state.fileDownloadUrl}\r\n                                                        ref={e=>this.dofileDownload = e}\r\n                                                    >download it</a>\r\n\r\n                                                    <Button\r\n                                                        variant=\"contained\"\r\n                                                        color=\"primary\"\r\n                                                        style={buttonStyle}\r\n                                                        onClick={handleOpen}>Verfy Data</Button>\r\n\r\n                                                    <Modal\r\n                                                        aria-labelledby=\"transition-modal-title\"\r\n                                                        aria-describedby=\"transition-modal-description\"\r\n                                                        open={this.state.open}\r\n                                                        onClose={handleClose}\r\n                                                        closeAfterTransition\r\n                                                        BackdropComponent={Backdrop}\r\n                                                        BackdropProps={{\r\n                                                        timeout: 500\r\n                                                    }}\r\n                                                        display='flex'\r\n                                                        alignItems='center'\r\n                                                        style={modal}>\r\n                                                        <Fade in={this.state.open}>\r\n                                                            <div style={paper}>\r\n                                                                <h2 id=\"transition-modal-title\">Blockchain data validation</h2>\r\n                                                                <table>\r\n                                                                    <tr>\r\n                                                                        <td>Student Name:</td>\r\n                                                                        <td>{this.state.rows[0][\"studentName\"]}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>School Name:</td>\r\n                                                                        <td>{this.state.rows[0][\"schoolName\"]}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Course Name:</td>\r\n                                                                        <td>{this.state.rows[0][\"courseDate\"]}</td>\r\n                                                                    </tr>\r\n                                                                </table>\r\n                                                                <Divider variant=\"middle\"/>\r\n                                                                <table>\r\n                                                                    <tr>\r\n                                                                        <td>Correctness Hash:</td>\r\n                                                                        <td>{this.state.correctness_Hash}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Correctness HashSignature:</td>\r\n                                                                        <td>{this.state.correctness_HashSignature}</td>\r\n                                                                    </tr>\r\n                                                                    <tr>\r\n                                                                        <td>Correctness TransactionAccount:</td>\r\n                                                                        <td>{this.state.correctness_TransactionAccount}</td>\r\n                                                                    </tr>\r\n                                                                </table>\r\n                                                            </div>\r\n                                                        </Fade>\r\n                                                    </Modal>\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        </TableBody>\r\n                                    ))}\r\n                            </Table>\r\n                        </TableContainer>\r\n\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Student;",{"ruleId":"547","severity":1,"message":"548","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":13},{"ruleId":"547","severity":1,"message":"551","line":9,"column":8,"nodeType":"549","messageId":"550","endLine":9,"endColumn":14},{"ruleId":"552","replacedBy":"553"},{"ruleId":"554","replacedBy":"555"},{"ruleId":"547","severity":1,"message":"556","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":18},{"ruleId":"547","severity":1,"message":"557","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":12},{"ruleId":"547","severity":1,"message":"558","line":10,"column":10,"nodeType":"549","messageId":"550","endLine":10,"endColumn":24},{"ruleId":"547","severity":1,"message":"559","line":10,"column":38,"nodeType":"549","messageId":"550","endLine":10,"endColumn":48},{"ruleId":"547","severity":1,"message":"560","line":10,"column":50,"nodeType":"549","messageId":"550","endLine":10,"endColumn":63},{"ruleId":"547","severity":1,"message":"561","line":19,"column":10,"nodeType":"549","messageId":"550","endLine":19,"endColumn":24},{"ruleId":"562","severity":1,"message":"563","line":113,"column":29,"nodeType":"564","endLine":113,"endColumn":44},{"ruleId":"565","severity":1,"message":"566","line":132,"column":138,"nodeType":"567","endLine":132,"endColumn":152},{"ruleId":"565","severity":1,"message":"566","line":281,"column":138,"nodeType":"567","endLine":281,"endColumn":152},{"ruleId":"562","severity":1,"message":"568","line":288,"column":17,"nodeType":"564","endLine":288,"endColumn":32},{"ruleId":"547","severity":1,"message":"569","line":127,"column":8,"nodeType":"549","messageId":"550","endLine":127,"endColumn":18},{"ruleId":"547","severity":1,"message":"570","line":178,"column":9,"nodeType":"549","messageId":"550","endLine":178,"endColumn":16},{"ruleId":"552","replacedBy":"571"},{"ruleId":"554","replacedBy":"572"},{"ruleId":"547","severity":1,"message":"569","line":127,"column":8,"nodeType":"549","messageId":"550","endLine":127,"endColumn":18},{"ruleId":"547","severity":1,"message":"570","line":178,"column":9,"nodeType":"549","messageId":"550","endLine":178,"endColumn":16},{"ruleId":"573","severity":2,"message":"574","line":178,"column":19,"nodeType":"549","endLine":178,"endColumn":28},{"ruleId":"573","severity":2,"message":"575","line":179,"column":29,"nodeType":"576","endLine":179,"endColumn":43},{"ruleId":"547","severity":1,"message":"570","line":57,"column":9,"nodeType":"549","messageId":"550","endLine":57,"endColumn":16},{"ruleId":"547","severity":1,"message":"577","line":62,"column":9,"nodeType":"549","messageId":"550","endLine":62,"endColumn":15},{"ruleId":"547","severity":1,"message":"578","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":20},{"ruleId":"547","severity":1,"message":"557","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":12},{"ruleId":"547","severity":1,"message":"558","line":10,"column":10,"nodeType":"549","messageId":"550","endLine":10,"endColumn":24},{"ruleId":"547","severity":1,"message":"559","line":10,"column":38,"nodeType":"549","messageId":"550","endLine":10,"endColumn":48},{"ruleId":"547","severity":1,"message":"560","line":10,"column":50,"nodeType":"549","messageId":"550","endLine":10,"endColumn":63},{"ruleId":"547","severity":1,"message":"579","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":19},{"ruleId":"547","severity":1,"message":"580","line":12,"column":8,"nodeType":"549","messageId":"550","endLine":12,"endColumn":25},{"ruleId":"547","severity":1,"message":"581","line":13,"column":8,"nodeType":"549","messageId":"550","endLine":13,"endColumn":20},{"ruleId":"547","severity":1,"message":"582","line":15,"column":8,"nodeType":"549","messageId":"550","endLine":15,"endColumn":12},{"ruleId":"547","severity":1,"message":"561","line":16,"column":10,"nodeType":"549","messageId":"550","endLine":16,"endColumn":24},{"ruleId":"547","severity":1,"message":"583","line":43,"column":15,"nodeType":"549","messageId":"550","endLine":43,"endColumn":26},{"ruleId":"547","severity":1,"message":"584","line":62,"column":15,"nodeType":"549","messageId":"550","endLine":62,"endColumn":18},{"ruleId":"547","severity":1,"message":"585","line":67,"column":15,"nodeType":"549","messageId":"550","endLine":67,"endColumn":19},{"ruleId":"547","severity":1,"message":"586","line":71,"column":15,"nodeType":"549","messageId":"550","endLine":71,"endColumn":25},{"ruleId":"562","severity":1,"message":"563","line":100,"column":25,"nodeType":"564","endLine":100,"endColumn":40},{"ruleId":"547","severity":1,"message":"559","line":2,"column":10,"nodeType":"549","messageId":"550","endLine":2,"endColumn":20},{"ruleId":"587","severity":1,"message":"588","line":48,"column":48,"nodeType":"589","messageId":"590","endLine":48,"endColumn":50},{"ruleId":"547","severity":1,"message":"559","line":2,"column":9,"nodeType":"549","messageId":"550","endLine":2,"endColumn":19},{"ruleId":"547","severity":1,"message":"591","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":17},{"ruleId":"547","severity":1,"message":"592","line":11,"column":15,"nodeType":"549","messageId":"550","endLine":11,"endColumn":23},{"ruleId":"547","severity":1,"message":"593","line":19,"column":8,"nodeType":"549","messageId":"550","endLine":19,"endColumn":11},{"ruleId":"587","severity":1,"message":"594","line":109,"column":37,"nodeType":"589","messageId":"590","endLine":109,"endColumn":39},{"ruleId":"587","severity":1,"message":"594","line":115,"column":74,"nodeType":"589","messageId":"590","endLine":115,"endColumn":76},{"ruleId":"587","severity":1,"message":"594","line":132,"column":66,"nodeType":"589","messageId":"590","endLine":132,"endColumn":68},{"ruleId":"587","severity":1,"message":"594","line":132,"column":133,"nodeType":"589","messageId":"590","endLine":132,"endColumn":135},{"ruleId":"587","severity":1,"message":"594","line":138,"column":91,"nodeType":"589","messageId":"590","endLine":138,"endColumn":93},{"ruleId":"587","severity":1,"message":"594","line":138,"column":148,"nodeType":"589","messageId":"590","endLine":138,"endColumn":150},{"ruleId":"587","severity":1,"message":"594","line":153,"column":96,"nodeType":"589","messageId":"590","endLine":153,"endColumn":98},{"ruleId":"587","severity":1,"message":"594","line":153,"column":158,"nodeType":"589","messageId":"590","endLine":153,"endColumn":160},{"ruleId":"562","severity":1,"message":"563","line":257,"column":29,"nodeType":"564","endLine":257,"endColumn":44},{"ruleId":"595","severity":1,"message":"596","line":330,"column":53,"nodeType":"564","endLine":330,"endColumn":133},{"ruleId":"547","severity":1,"message":"597","line":3,"column":8,"nodeType":"549","messageId":"550","endLine":3,"endColumn":19},{"ruleId":"547","severity":1,"message":"559","line":6,"column":10,"nodeType":"549","messageId":"550","endLine":6,"endColumn":20},{"ruleId":"547","severity":1,"message":"598","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":17},{"ruleId":"587","severity":1,"message":"594","line":50,"column":24,"nodeType":"589","messageId":"590","endLine":50,"endColumn":26},{"ruleId":"587","severity":1,"message":"594","line":50,"column":45,"nodeType":"589","messageId":"590","endLine":50,"endColumn":47},{"ruleId":"547","severity":1,"message":"599","line":70,"column":11,"nodeType":"549","messageId":"550","endLine":70,"endColumn":16},{"ruleId":"547","severity":1,"message":"600","line":76,"column":11,"nodeType":"549","messageId":"550","endLine":76,"endColumn":17},{"ruleId":"547","severity":1,"message":"601","line":100,"column":11,"nodeType":"549","messageId":"550","endLine":100,"endColumn":17},{"ruleId":"562","severity":1,"message":"563","line":126,"column":11,"nodeType":"564","endLine":126,"endColumn":26},{"ruleId":"547","severity":1,"message":"559","line":6,"column":10,"nodeType":"549","messageId":"550","endLine":6,"endColumn":20},{"ruleId":"547","severity":1,"message":"602","line":9,"column":16,"nodeType":"549","messageId":"550","endLine":9,"endColumn":25},{"ruleId":"587","severity":1,"message":"594","line":63,"column":20,"nodeType":"589","messageId":"590","endLine":63,"endColumn":22},{"ruleId":"587","severity":1,"message":"594","line":63,"column":41,"nodeType":"589","messageId":"590","endLine":63,"endColumn":43},{"ruleId":"547","severity":1,"message":"600","line":87,"column":11,"nodeType":"549","messageId":"550","endLine":87,"endColumn":17},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"562","severity":1,"message":"604","line":191,"column":15,"nodeType":"564","endLine":191,"endColumn":63},{"ruleId":"562","severity":1,"message":"605","line":193,"column":15,"nodeType":"564","endLine":193,"endColumn":63},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"547","severity":1,"message":"606","line":114,"column":9,"nodeType":"549","messageId":"550","endLine":114,"endColumn":16},{"ruleId":"552","replacedBy":"607"},{"ruleId":"554","replacedBy":"608"},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"562","severity":1,"message":"609","line":184,"column":15,"nodeType":"564","endLine":184,"endColumn":64},{"ruleId":"562","severity":1,"message":"610","line":186,"column":15,"nodeType":"564","endLine":186,"endColumn":64},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"547","severity":1,"message":"611","line":28,"column":8,"nodeType":"549","messageId":"550","endLine":28,"endColumn":14},{"ruleId":"547","severity":1,"message":"612","line":124,"column":9,"nodeType":"549","messageId":"550","endLine":124,"endColumn":25},{"ruleId":"562","severity":1,"message":"609","line":194,"column":15,"nodeType":"564","endLine":194,"endColumn":76},{"ruleId":"562","severity":1,"message":"610","line":196,"column":15,"nodeType":"564","endLine":196,"endColumn":76},{"ruleId":"562","severity":1,"message":"613","line":207,"column":15,"nodeType":"564","endLine":207,"endColumn":46},{"ruleId":"573","severity":2,"message":"614","line":17,"column":20,"nodeType":"549","endLine":17,"endColumn":31},{"ruleId":"547","severity":1,"message":"615","line":5,"column":8,"nodeType":"549","messageId":"550","endLine":5,"endColumn":21},{"ruleId":"547","severity":1,"message":"616","line":9,"column":8,"nodeType":"549","messageId":"550","endLine":9,"endColumn":20},{"ruleId":"547","severity":1,"message":"617","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":18},{"ruleId":"547","severity":1,"message":"618","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":22},{"ruleId":"573","severity":2,"message":"619","line":17,"column":20,"nodeType":"549","endLine":17,"endColumn":31},{"ruleId":"547","severity":1,"message":"615","line":5,"column":8,"nodeType":"549","messageId":"550","endLine":5,"endColumn":21},{"ruleId":"547","severity":1,"message":"616","line":9,"column":8,"nodeType":"549","messageId":"550","endLine":9,"endColumn":20},{"ruleId":"547","severity":1,"message":"617","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":18},{"ruleId":"547","severity":1,"message":"618","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":22},{"ruleId":"547","severity":1,"message":"603","line":15,"column":10,"nodeType":"549","messageId":"550","endLine":15,"endColumn":18},{"ruleId":"547","severity":1,"message":"620","line":24,"column":10,"nodeType":"549","messageId":"550","endLine":24,"endColumn":31},{"ruleId":"547","severity":1,"message":"621","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":24},{"ruleId":"547","severity":1,"message":"622","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":16},{"ruleId":"547","severity":1,"message":"557","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":12},{"ruleId":"547","severity":1,"message":"593","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":11},{"ruleId":"547","severity":1,"message":"623","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":24},{"ruleId":"547","severity":1,"message":"603","line":16,"column":10,"nodeType":"549","messageId":"550","endLine":16,"endColumn":18},{"ruleId":"547","severity":1,"message":"624","line":50,"column":11,"nodeType":"549","messageId":"550","endLine":50,"endColumn":19},{"ruleId":"587","severity":1,"message":"588","line":86,"column":19,"nodeType":"589","messageId":"590","endLine":86,"endColumn":21},{"ruleId":"587","severity":1,"message":"588","line":86,"column":39,"nodeType":"589","messageId":"590","endLine":86,"endColumn":41},{"ruleId":"587","severity":1,"message":"588","line":86,"column":54,"nodeType":"589","messageId":"590","endLine":86,"endColumn":56},{"ruleId":"587","severity":1,"message":"588","line":86,"column":69,"nodeType":"589","messageId":"590","endLine":86,"endColumn":71},{"ruleId":"587","severity":1,"message":"588","line":86,"column":89,"nodeType":"589","messageId":"590","endLine":86,"endColumn":91},{"ruleId":"587","severity":1,"message":"588","line":86,"column":109,"nodeType":"589","messageId":"590","endLine":86,"endColumn":111},{"ruleId":"587","severity":1,"message":"588","line":86,"column":127,"nodeType":"589","messageId":"590","endLine":86,"endColumn":129},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"547","severity":1,"message":"612","line":123,"column":9,"nodeType":"549","messageId":"550","endLine":123,"endColumn":25},{"ruleId":"562","severity":1,"message":"609","line":193,"column":15,"nodeType":"564","endLine":193,"endColumn":76},{"ruleId":"562","severity":1,"message":"610","line":195,"column":15,"nodeType":"564","endLine":195,"endColumn":76},{"ruleId":"562","severity":1,"message":"625","line":206,"column":15,"nodeType":"564","endLine":206,"endColumn":49},{"ruleId":"547","severity":1,"message":"626","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"611","line":3,"column":8,"nodeType":"549","messageId":"550","endLine":3,"endColumn":14},{"ruleId":"547","severity":1,"message":"597","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":19},{"ruleId":"547","severity":1,"message":"627","line":5,"column":8,"nodeType":"549","messageId":"550","endLine":5,"endColumn":17},{"ruleId":"547","severity":1,"message":"621","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":24},{"ruleId":"547","severity":1,"message":"622","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":16},{"ruleId":"547","severity":1,"message":"557","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":12},{"ruleId":"547","severity":1,"message":"593","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":11},{"ruleId":"547","severity":1,"message":"623","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":24},{"ruleId":"547","severity":1,"message":"569","line":12,"column":8,"nodeType":"549","messageId":"550","endLine":12,"endColumn":18},{"ruleId":"547","severity":1,"message":"598","line":14,"column":8,"nodeType":"549","messageId":"550","endLine":14,"endColumn":17},{"ruleId":"547","severity":1,"message":"603","line":16,"column":10,"nodeType":"549","messageId":"550","endLine":16,"endColumn":18},{"ruleId":"547","severity":1,"message":"624","line":52,"column":11,"nodeType":"549","messageId":"550","endLine":52,"endColumn":19},{"ruleId":"547","severity":1,"message":"628","line":55,"column":10,"nodeType":"549","messageId":"550","endLine":55,"endColumn":20},{"ruleId":"547","severity":1,"message":"629","line":55,"column":22,"nodeType":"549","messageId":"550","endLine":55,"endColumn":35},{"ruleId":"547","severity":1,"message":"630","line":56,"column":10,"nodeType":"549","messageId":"550","endLine":56,"endColumn":15},{"ruleId":"547","severity":1,"message":"631","line":56,"column":17,"nodeType":"549","messageId":"550","endLine":56,"endColumn":25},{"ruleId":"547","severity":1,"message":"632","line":57,"column":10,"nodeType":"549","messageId":"550","endLine":57,"endColumn":15},{"ruleId":"547","severity":1,"message":"633","line":57,"column":17,"nodeType":"549","messageId":"550","endLine":57,"endColumn":25},{"ruleId":"547","severity":1,"message":"634","line":58,"column":10,"nodeType":"549","messageId":"550","endLine":58,"endColumn":20},{"ruleId":"547","severity":1,"message":"635","line":58,"column":22,"nodeType":"549","messageId":"550","endLine":58,"endColumn":35},{"ruleId":"547","severity":1,"message":"636","line":59,"column":10,"nodeType":"549","messageId":"550","endLine":59,"endColumn":20},{"ruleId":"547","severity":1,"message":"637","line":59,"column":22,"nodeType":"549","messageId":"550","endLine":59,"endColumn":35},{"ruleId":"638","severity":1,"message":"639","line":61,"column":3,"nodeType":"549","endLine":61,"endColumn":12,"suggestions":"640"},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"547","severity":1,"message":"641","line":23,"column":20,"nodeType":"549","messageId":"550","endLine":23,"endColumn":29},{"ruleId":"547","severity":1,"message":"612","line":123,"column":9,"nodeType":"549","messageId":"550","endLine":123,"endColumn":25},{"ruleId":"562","severity":1,"message":"609","line":191,"column":15,"nodeType":"564","endLine":191,"endColumn":39},{"ruleId":"562","severity":1,"message":"610","line":193,"column":15,"nodeType":"564","endLine":193,"endColumn":39},{"ruleId":"562","severity":1,"message":"642","line":204,"column":15,"nodeType":"564","endLine":204,"endColumn":47},{"ruleId":"547","severity":1,"message":"626","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"597","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":19},{"ruleId":"547","severity":1,"message":"621","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":24},{"ruleId":"547","severity":1,"message":"557","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":12},{"ruleId":"547","severity":1,"message":"593","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":11},{"ruleId":"547","severity":1,"message":"623","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":24},{"ruleId":"547","severity":1,"message":"598","line":14,"column":8,"nodeType":"549","messageId":"550","endLine":14,"endColumn":17},{"ruleId":"547","severity":1,"message":"603","line":16,"column":10,"nodeType":"549","messageId":"550","endLine":16,"endColumn":18},{"ruleId":"547","severity":1,"message":"643","line":25,"column":8,"nodeType":"549","messageId":"550","endLine":25,"endColumn":21},{"ruleId":"547","severity":1,"message":"644","line":27,"column":8,"nodeType":"549","messageId":"550","endLine":27,"endColumn":25},{"ruleId":"547","severity":1,"message":"645","line":29,"column":8,"nodeType":"549","messageId":"550","endLine":29,"endColumn":19},{"ruleId":"547","severity":1,"message":"646","line":30,"column":8,"nodeType":"549","messageId":"550","endLine":30,"endColumn":18},{"ruleId":"547","severity":1,"message":"647","line":31,"column":8,"nodeType":"549","messageId":"550","endLine":31,"endColumn":16},{"ruleId":"547","severity":1,"message":"648","line":32,"column":8,"nodeType":"549","messageId":"550","endLine":32,"endColumn":14},{"ruleId":"547","severity":1,"message":"649","line":33,"column":8,"nodeType":"549","messageId":"550","endLine":33,"endColumn":14},{"ruleId":"547","severity":1,"message":"650","line":34,"column":8,"nodeType":"549","messageId":"550","endLine":34,"endColumn":35},{"ruleId":"547","severity":1,"message":"624","line":76,"column":11,"nodeType":"549","messageId":"550","endLine":76,"endColumn":19},{"ruleId":"547","severity":1,"message":"651","line":80,"column":10,"nodeType":"549","messageId":"550","endLine":80,"endColumn":18},{"ruleId":"547","severity":1,"message":"652","line":81,"column":10,"nodeType":"549","messageId":"550","endLine":81,"endColumn":21},{"ruleId":"547","severity":1,"message":"653","line":81,"column":23,"nodeType":"549","messageId":"550","endLine":81,"endColumn":37},{"ruleId":"547","severity":1,"message":"630","line":86,"column":10,"nodeType":"549","messageId":"550","endLine":86,"endColumn":15},{"ruleId":"547","severity":1,"message":"631","line":86,"column":17,"nodeType":"549","messageId":"550","endLine":86,"endColumn":25},{"ruleId":"547","severity":1,"message":"632","line":87,"column":10,"nodeType":"549","messageId":"550","endLine":87,"endColumn":15},{"ruleId":"547","severity":1,"message":"633","line":87,"column":17,"nodeType":"549","messageId":"550","endLine":87,"endColumn":25},{"ruleId":"547","severity":1,"message":"654","line":89,"column":10,"nodeType":"549","messageId":"550","endLine":89,"endColumn":18},{"ruleId":"547","severity":1,"message":"655","line":89,"column":20,"nodeType":"549","messageId":"550","endLine":89,"endColumn":31},{"ruleId":"547","severity":1,"message":"656","line":92,"column":10,"nodeType":"549","messageId":"550","endLine":92,"endColumn":18},{"ruleId":"547","severity":1,"message":"657","line":92,"column":20,"nodeType":"549","messageId":"550","endLine":92,"endColumn":31},{"ruleId":"638","severity":1,"message":"639","line":140,"column":3,"nodeType":"549","endLine":140,"endColumn":12,"suggestions":"658"},{"ruleId":"547","severity":1,"message":"615","line":5,"column":8,"nodeType":"549","messageId":"550","endLine":5,"endColumn":21},{"ruleId":"547","severity":1,"message":"659","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":21},{"ruleId":"547","severity":1,"message":"616","line":9,"column":8,"nodeType":"549","messageId":"550","endLine":9,"endColumn":20},{"ruleId":"547","severity":1,"message":"617","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":18},{"ruleId":"547","severity":1,"message":"618","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":22},{"ruleId":"547","severity":1,"message":"603","line":14,"column":10,"nodeType":"549","messageId":"550","endLine":14,"endColumn":18},{"ruleId":"547","severity":1,"message":"615","line":5,"column":8,"nodeType":"549","messageId":"550","endLine":5,"endColumn":21},{"ruleId":"547","severity":1,"message":"660","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":24},{"ruleId":"547","severity":1,"message":"661","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":18},{"ruleId":"547","severity":1,"message":"616","line":9,"column":8,"nodeType":"549","messageId":"550","endLine":9,"endColumn":20},{"ruleId":"547","severity":1,"message":"617","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":18},{"ruleId":"547","severity":1,"message":"618","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":22},{"ruleId":"547","severity":1,"message":"603","line":14,"column":10,"nodeType":"549","messageId":"550","endLine":14,"endColumn":18},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"547","severity":1,"message":"612","line":123,"column":9,"nodeType":"549","messageId":"550","endLine":123,"endColumn":25},{"ruleId":"562","severity":1,"message":"604","line":192,"column":15,"nodeType":"564","endLine":192,"endColumn":75},{"ruleId":"562","severity":1,"message":"605","line":194,"column":15,"nodeType":"564","endLine":194,"endColumn":75},{"ruleId":"562","severity":1,"message":"662","line":205,"column":15,"nodeType":"564","endLine":205,"endColumn":45},{"ruleId":"547","severity":1,"message":"626","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"597","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":19},{"ruleId":"547","severity":1,"message":"621","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":24},{"ruleId":"547","severity":1,"message":"557","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":12},{"ruleId":"547","severity":1,"message":"593","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":11},{"ruleId":"547","severity":1,"message":"623","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":24},{"ruleId":"547","severity":1,"message":"598","line":14,"column":8,"nodeType":"549","messageId":"550","endLine":14,"endColumn":17},{"ruleId":"547","severity":1,"message":"603","line":16,"column":10,"nodeType":"549","messageId":"550","endLine":16,"endColumn":18},{"ruleId":"547","severity":1,"message":"643","line":25,"column":8,"nodeType":"549","messageId":"550","endLine":25,"endColumn":21},{"ruleId":"547","severity":1,"message":"644","line":27,"column":8,"nodeType":"549","messageId":"550","endLine":27,"endColumn":25},{"ruleId":"547","severity":1,"message":"645","line":29,"column":8,"nodeType":"549","messageId":"550","endLine":29,"endColumn":19},{"ruleId":"547","severity":1,"message":"646","line":30,"column":8,"nodeType":"549","messageId":"550","endLine":30,"endColumn":18},{"ruleId":"547","severity":1,"message":"647","line":31,"column":8,"nodeType":"549","messageId":"550","endLine":31,"endColumn":16},{"ruleId":"547","severity":1,"message":"648","line":32,"column":8,"nodeType":"549","messageId":"550","endLine":32,"endColumn":14},{"ruleId":"547","severity":1,"message":"649","line":33,"column":8,"nodeType":"549","messageId":"550","endLine":33,"endColumn":14},{"ruleId":"547","severity":1,"message":"650","line":34,"column":8,"nodeType":"549","messageId":"550","endLine":34,"endColumn":35},{"ruleId":"547","severity":1,"message":"624","line":76,"column":11,"nodeType":"549","messageId":"550","endLine":76,"endColumn":19},{"ruleId":"547","severity":1,"message":"651","line":80,"column":10,"nodeType":"549","messageId":"550","endLine":80,"endColumn":18},{"ruleId":"547","severity":1,"message":"652","line":81,"column":10,"nodeType":"549","messageId":"550","endLine":81,"endColumn":21},{"ruleId":"547","severity":1,"message":"653","line":81,"column":23,"nodeType":"549","messageId":"550","endLine":81,"endColumn":37},{"ruleId":"547","severity":1,"message":"630","line":86,"column":10,"nodeType":"549","messageId":"550","endLine":86,"endColumn":15},{"ruleId":"547","severity":1,"message":"631","line":86,"column":17,"nodeType":"549","messageId":"550","endLine":86,"endColumn":25},{"ruleId":"547","severity":1,"message":"632","line":87,"column":10,"nodeType":"549","messageId":"550","endLine":87,"endColumn":15},{"ruleId":"547","severity":1,"message":"633","line":87,"column":17,"nodeType":"549","messageId":"550","endLine":87,"endColumn":25},{"ruleId":"638","severity":1,"message":"639","line":156,"column":3,"nodeType":"549","endLine":156,"endColumn":12,"suggestions":"663"},{"ruleId":"664","severity":1,"message":"665","line":380,"column":69,"nodeType":"589","messageId":"666","endLine":380,"endColumn":70},{"ruleId":"664","severity":1,"message":"665","line":380,"column":76,"nodeType":"589","messageId":"666","endLine":380,"endColumn":77},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"547","severity":1,"message":"612","line":123,"column":9,"nodeType":"549","messageId":"550","endLine":123,"endColumn":25},{"ruleId":"562","severity":1,"message":"604","line":192,"column":15,"nodeType":"564","endLine":192,"endColumn":75},{"ruleId":"562","severity":1,"message":"605","line":194,"column":15,"nodeType":"564","endLine":194,"endColumn":75},{"ruleId":"562","severity":1,"message":"667","line":205,"column":15,"nodeType":"564","endLine":205,"endColumn":48},{"ruleId":"547","severity":1,"message":"626","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"597","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":19},{"ruleId":"547","severity":1,"message":"621","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":24},{"ruleId":"547","severity":1,"message":"557","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":12},{"ruleId":"547","severity":1,"message":"593","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":11},{"ruleId":"547","severity":1,"message":"623","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":24},{"ruleId":"547","severity":1,"message":"598","line":14,"column":8,"nodeType":"549","messageId":"550","endLine":14,"endColumn":17},{"ruleId":"547","severity":1,"message":"603","line":16,"column":10,"nodeType":"549","messageId":"550","endLine":16,"endColumn":18},{"ruleId":"547","severity":1,"message":"643","line":25,"column":8,"nodeType":"549","messageId":"550","endLine":25,"endColumn":21},{"ruleId":"547","severity":1,"message":"644","line":27,"column":8,"nodeType":"549","messageId":"550","endLine":27,"endColumn":25},{"ruleId":"547","severity":1,"message":"645","line":29,"column":8,"nodeType":"549","messageId":"550","endLine":29,"endColumn":19},{"ruleId":"547","severity":1,"message":"646","line":30,"column":8,"nodeType":"549","messageId":"550","endLine":30,"endColumn":18},{"ruleId":"547","severity":1,"message":"647","line":31,"column":8,"nodeType":"549","messageId":"550","endLine":31,"endColumn":16},{"ruleId":"547","severity":1,"message":"648","line":32,"column":8,"nodeType":"549","messageId":"550","endLine":32,"endColumn":14},{"ruleId":"547","severity":1,"message":"649","line":33,"column":8,"nodeType":"549","messageId":"550","endLine":33,"endColumn":14},{"ruleId":"547","severity":1,"message":"650","line":34,"column":8,"nodeType":"549","messageId":"550","endLine":34,"endColumn":35},{"ruleId":"547","severity":1,"message":"624","line":76,"column":11,"nodeType":"549","messageId":"550","endLine":76,"endColumn":19},{"ruleId":"547","severity":1,"message":"651","line":80,"column":10,"nodeType":"549","messageId":"550","endLine":80,"endColumn":18},{"ruleId":"547","severity":1,"message":"652","line":81,"column":10,"nodeType":"549","messageId":"550","endLine":81,"endColumn":21},{"ruleId":"547","severity":1,"message":"653","line":81,"column":23,"nodeType":"549","messageId":"550","endLine":81,"endColumn":37},{"ruleId":"547","severity":1,"message":"630","line":86,"column":10,"nodeType":"549","messageId":"550","endLine":86,"endColumn":15},{"ruleId":"547","severity":1,"message":"631","line":86,"column":17,"nodeType":"549","messageId":"550","endLine":86,"endColumn":25},{"ruleId":"547","severity":1,"message":"632","line":87,"column":10,"nodeType":"549","messageId":"550","endLine":87,"endColumn":15},{"ruleId":"547","severity":1,"message":"633","line":87,"column":17,"nodeType":"549","messageId":"550","endLine":87,"endColumn":25},{"ruleId":"547","severity":1,"message":"656","line":91,"column":10,"nodeType":"549","messageId":"550","endLine":91,"endColumn":18},{"ruleId":"547","severity":1,"message":"657","line":91,"column":20,"nodeType":"549","messageId":"550","endLine":91,"endColumn":31},{"ruleId":"638","severity":1,"message":"639","line":157,"column":3,"nodeType":"549","endLine":157,"endColumn":12,"suggestions":"668"},{"ruleId":"664","severity":1,"message":"665","line":381,"column":69,"nodeType":"589","messageId":"666","endLine":381,"endColumn":70},{"ruleId":"664","severity":1,"message":"665","line":381,"column":76,"nodeType":"589","messageId":"666","endLine":381,"endColumn":77},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"547","severity":1,"message":"612","line":123,"column":9,"nodeType":"549","messageId":"550","endLine":123,"endColumn":25},{"ruleId":"562","severity":1,"message":"609","line":194,"column":15,"nodeType":"564","endLine":194,"endColumn":76},{"ruleId":"562","severity":1,"message":"610","line":196,"column":15,"nodeType":"564","endLine":196,"endColumn":76},{"ruleId":"562","severity":1,"message":"669","line":207,"column":15,"nodeType":"564","endLine":207,"endColumn":56},{"ruleId":"547","severity":1,"message":"626","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"597","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":19},{"ruleId":"547","severity":1,"message":"621","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":24},{"ruleId":"547","severity":1,"message":"622","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":16},{"ruleId":"547","severity":1,"message":"557","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":12},{"ruleId":"547","severity":1,"message":"593","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":11},{"ruleId":"547","severity":1,"message":"623","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":24},{"ruleId":"547","severity":1,"message":"598","line":14,"column":8,"nodeType":"549","messageId":"550","endLine":14,"endColumn":17},{"ruleId":"547","severity":1,"message":"603","line":16,"column":10,"nodeType":"549","messageId":"550","endLine":16,"endColumn":18},{"ruleId":"547","severity":1,"message":"643","line":25,"column":8,"nodeType":"549","messageId":"550","endLine":25,"endColumn":21},{"ruleId":"547","severity":1,"message":"644","line":27,"column":8,"nodeType":"549","messageId":"550","endLine":27,"endColumn":25},{"ruleId":"547","severity":1,"message":"645","line":29,"column":8,"nodeType":"549","messageId":"550","endLine":29,"endColumn":19},{"ruleId":"547","severity":1,"message":"646","line":30,"column":8,"nodeType":"549","messageId":"550","endLine":30,"endColumn":18},{"ruleId":"547","severity":1,"message":"647","line":31,"column":8,"nodeType":"549","messageId":"550","endLine":31,"endColumn":16},{"ruleId":"547","severity":1,"message":"648","line":32,"column":8,"nodeType":"549","messageId":"550","endLine":32,"endColumn":14},{"ruleId":"547","severity":1,"message":"649","line":33,"column":8,"nodeType":"549","messageId":"550","endLine":33,"endColumn":14},{"ruleId":"547","severity":1,"message":"650","line":34,"column":8,"nodeType":"549","messageId":"550","endLine":34,"endColumn":35},{"ruleId":"547","severity":1,"message":"624","line":73,"column":11,"nodeType":"549","messageId":"550","endLine":73,"endColumn":19},{"ruleId":"547","severity":1,"message":"651","line":77,"column":10,"nodeType":"549","messageId":"550","endLine":77,"endColumn":18},{"ruleId":"547","severity":1,"message":"652","line":78,"column":10,"nodeType":"549","messageId":"550","endLine":78,"endColumn":21},{"ruleId":"547","severity":1,"message":"653","line":78,"column":23,"nodeType":"549","messageId":"550","endLine":78,"endColumn":37},{"ruleId":"547","severity":1,"message":"670","line":82,"column":10,"nodeType":"549","messageId":"550","endLine":82,"endColumn":23},{"ruleId":"547","severity":1,"message":"630","line":83,"column":10,"nodeType":"549","messageId":"550","endLine":83,"endColumn":15},{"ruleId":"547","severity":1,"message":"631","line":83,"column":17,"nodeType":"549","messageId":"550","endLine":83,"endColumn":25},{"ruleId":"547","severity":1,"message":"656","line":91,"column":10,"nodeType":"549","messageId":"550","endLine":91,"endColumn":18},{"ruleId":"547","severity":1,"message":"657","line":91,"column":20,"nodeType":"549","messageId":"550","endLine":91,"endColumn":31},{"ruleId":"638","severity":1,"message":"639","line":114,"column":3,"nodeType":"549","endLine":114,"endColumn":12,"suggestions":"671"},{"ruleId":"547","severity":1,"message":"593","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":11},{"ruleId":"547","severity":1,"message":"557","line":17,"column":8,"nodeType":"549","messageId":"550","endLine":17,"endColumn":12},{"ruleId":"547","severity":1,"message":"603","line":23,"column":10,"nodeType":"549","messageId":"550","endLine":23,"endColumn":18},{"ruleId":"547","severity":1,"message":"612","line":123,"column":9,"nodeType":"549","messageId":"550","endLine":123,"endColumn":25},{"ruleId":"562","severity":1,"message":"604","line":192,"column":15,"nodeType":"564","endLine":192,"endColumn":75},{"ruleId":"562","severity":1,"message":"605","line":194,"column":15,"nodeType":"564","endLine":194,"endColumn":75},{"ruleId":"562","severity":1,"message":"672","line":205,"column":15,"nodeType":"564","endLine":205,"endColumn":55},{"ruleId":"547","severity":1,"message":"626","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":14},{"ruleId":"547","severity":1,"message":"597","line":4,"column":8,"nodeType":"549","messageId":"550","endLine":4,"endColumn":19},{"ruleId":"547","severity":1,"message":"621","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":24},{"ruleId":"547","severity":1,"message":"622","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":16},{"ruleId":"547","severity":1,"message":"557","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":12},{"ruleId":"547","severity":1,"message":"593","line":10,"column":8,"nodeType":"549","messageId":"550","endLine":10,"endColumn":11},{"ruleId":"547","severity":1,"message":"623","line":11,"column":8,"nodeType":"549","messageId":"550","endLine":11,"endColumn":24},{"ruleId":"547","severity":1,"message":"598","line":14,"column":8,"nodeType":"549","messageId":"550","endLine":14,"endColumn":17},{"ruleId":"547","severity":1,"message":"603","line":16,"column":10,"nodeType":"549","messageId":"550","endLine":16,"endColumn":18},{"ruleId":"547","severity":1,"message":"643","line":25,"column":8,"nodeType":"549","messageId":"550","endLine":25,"endColumn":21},{"ruleId":"547","severity":1,"message":"644","line":27,"column":8,"nodeType":"549","messageId":"550","endLine":27,"endColumn":25},{"ruleId":"547","severity":1,"message":"645","line":29,"column":8,"nodeType":"549","messageId":"550","endLine":29,"endColumn":19},{"ruleId":"547","severity":1,"message":"646","line":30,"column":8,"nodeType":"549","messageId":"550","endLine":30,"endColumn":18},{"ruleId":"547","severity":1,"message":"647","line":31,"column":8,"nodeType":"549","messageId":"550","endLine":31,"endColumn":16},{"ruleId":"547","severity":1,"message":"648","line":32,"column":8,"nodeType":"549","messageId":"550","endLine":32,"endColumn":14},{"ruleId":"547","severity":1,"message":"649","line":33,"column":8,"nodeType":"549","messageId":"550","endLine":33,"endColumn":14},{"ruleId":"547","severity":1,"message":"650","line":34,"column":8,"nodeType":"549","messageId":"550","endLine":34,"endColumn":35},{"ruleId":"547","severity":1,"message":"624","line":73,"column":11,"nodeType":"549","messageId":"550","endLine":73,"endColumn":19},{"ruleId":"547","severity":1,"message":"651","line":77,"column":10,"nodeType":"549","messageId":"550","endLine":77,"endColumn":18},{"ruleId":"547","severity":1,"message":"652","line":78,"column":10,"nodeType":"549","messageId":"550","endLine":78,"endColumn":21},{"ruleId":"547","severity":1,"message":"653","line":78,"column":23,"nodeType":"549","messageId":"550","endLine":78,"endColumn":37},{"ruleId":"547","severity":1,"message":"670","line":82,"column":10,"nodeType":"549","messageId":"550","endLine":82,"endColumn":23},{"ruleId":"547","severity":1,"message":"630","line":83,"column":10,"nodeType":"549","messageId":"550","endLine":83,"endColumn":15},{"ruleId":"547","severity":1,"message":"631","line":83,"column":17,"nodeType":"549","messageId":"550","endLine":83,"endColumn":25},{"ruleId":"547","severity":1,"message":"656","line":91,"column":10,"nodeType":"549","messageId":"550","endLine":91,"endColumn":18},{"ruleId":"547","severity":1,"message":"657","line":91,"column":20,"nodeType":"549","messageId":"550","endLine":91,"endColumn":31},{"ruleId":"638","severity":1,"message":"639","line":114,"column":3,"nodeType":"549","endLine":114,"endColumn":12,"suggestions":"673"},{"ruleId":"547","severity":1,"message":"674","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":17},{"ruleId":"547","severity":1,"message":"611","line":5,"column":8,"nodeType":"549","messageId":"550","endLine":5,"endColumn":14},{"ruleId":"547","severity":1,"message":"675","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":18},{"ruleId":"547","severity":1,"message":"676","line":7,"column":8,"nodeType":"549","messageId":"550","endLine":7,"endColumn":18},{"ruleId":"547","severity":1,"message":"569","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":18},{"ruleId":"547","severity":1,"message":"674","line":2,"column":8,"nodeType":"549","messageId":"550","endLine":2,"endColumn":17},{"ruleId":"547","severity":1,"message":"557","line":6,"column":8,"nodeType":"549","messageId":"550","endLine":6,"endColumn":12},{"ruleId":"562","severity":1,"message":"563","line":38,"column":11,"nodeType":"564","endLine":38,"endColumn":26},{"ruleId":"547","severity":1,"message":"559","line":2,"column":9,"nodeType":"549","messageId":"550","endLine":2,"endColumn":19},{"ruleId":"547","severity":1,"message":"591","line":8,"column":8,"nodeType":"549","messageId":"550","endLine":8,"endColumn":17},{"ruleId":"547","severity":1,"message":"592","line":11,"column":15,"nodeType":"549","messageId":"550","endLine":11,"endColumn":23},{"ruleId":"547","severity":1,"message":"593","line":19,"column":8,"nodeType":"549","messageId":"550","endLine":19,"endColumn":11},{"ruleId":"547","severity":1,"message":"677","line":21,"column":8,"nodeType":"549","messageId":"550","endLine":21,"endColumn":20},{"ruleId":"547","severity":1,"message":"678","line":22,"column":10,"nodeType":"549","messageId":"550","endLine":22,"endColumn":21},{"ruleId":"547","severity":1,"message":"679","line":24,"column":10,"nodeType":"549","messageId":"550","endLine":24,"endColumn":20},{"ruleId":"547","severity":1,"message":"624","line":64,"column":16,"nodeType":"549","messageId":"550","endLine":64,"endColumn":24},{"ruleId":"587","severity":1,"message":"594","line":112,"column":37,"nodeType":"589","messageId":"590","endLine":112,"endColumn":39},{"ruleId":"587","severity":1,"message":"594","line":118,"column":74,"nodeType":"589","messageId":"590","endLine":118,"endColumn":76},{"ruleId":"587","severity":1,"message":"594","line":135,"column":66,"nodeType":"589","messageId":"590","endLine":135,"endColumn":68},{"ruleId":"587","severity":1,"message":"594","line":135,"column":133,"nodeType":"589","messageId":"590","endLine":135,"endColumn":135},{"ruleId":"587","severity":1,"message":"594","line":141,"column":91,"nodeType":"589","messageId":"590","endLine":141,"endColumn":93},{"ruleId":"587","severity":1,"message":"594","line":141,"column":148,"nodeType":"589","messageId":"590","endLine":141,"endColumn":150},{"ruleId":"587","severity":1,"message":"594","line":156,"column":96,"nodeType":"589","messageId":"590","endLine":156,"endColumn":98},{"ruleId":"587","severity":1,"message":"594","line":156,"column":158,"nodeType":"589","messageId":"590","endLine":156,"endColumn":160},{"ruleId":"547","severity":1,"message":"680","line":240,"column":15,"nodeType":"549","messageId":"550","endLine":240,"endColumn":27},{"ruleId":"547","severity":1,"message":"681","line":244,"column":15,"nodeType":"549","messageId":"550","endLine":244,"endColumn":31},{"ruleId":"595","severity":1,"message":"596","line":408,"column":53,"nodeType":"564","endLine":408,"endColumn":133},"no-unused-vars","'Admin' is defined but never used.","Identifier","unusedVar","'Worker' is defined but never used.","no-native-reassign",["682"],"no-negated-in-lhs",["683"],"'SearchTabs' is defined but never used.","'Link' is defined but never used.","'createMuiTheme' is defined but never used.","'makeStyles' is defined but never used.","'ThemeProvider' is defined but never used.","'StylesProvider' is defined but never used.","react/jsx-pascal-case","Imported JSX component Index_Header must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Imported JSX component Index_Footer must be in PascalCase or SCREAMING_SNAKE_CASE","'Typography' is defined but never used.","'classes' is assigned a value but never used.",["682"],["683"],"react-hooks/rules-of-hooks","React Hook \"useStyles\" is called in function \"searchTabs\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook \"React.useState\" is called in function \"searchTabs\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","MemberExpression","'status' is assigned a value but never used.","'Index_Footer' is defined but never used.","'schoolPhoto' is defined but never used.","'organizationPhoto' is defined but never used.","'studentPhoto' is defined but never used.","'Fade' is defined but never used.","'whoCanUseIt' is assigned a value but never used.","'img' is assigned a value but never used.","'img2' is assigned a value but never used.","'CoolButton' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'TableHead' is defined but never used.","'Redirect' is defined but never used.","'Box' is defined but never used.","Expected '===' and instead saw '=='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'paper' is assigned a value but never used.","'avatar' is assigned a value but never used.","'hihihi' is assigned a value but never used.","'loginUser' is defined but never used.","'useState' is defined but never used.","Imported JSX component Admin_upperlistItems must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Admin_lowerlistItems must be in PascalCase or SCREAMING_SNAKE_CASE","'history' is assigned a value but never used.",["682"],["683"],"Imported JSX component Worker_upperlistItems must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Worker_lowerlistItems must be in PascalCase or SCREAMING_SNAKE_CASE","'Button' is defined but never used.","'fixedHeightPaper' is assigned a value but never used.","Imported JSX component CreateCertificate_component must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook \"useLocation\" is called in function \"worker_upperlistItems\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'ListSubheader' is defined but never used.","'BarChartIcon' is defined but never used.","'LayersIcon' is defined but never used.","'AssignmentIcon' is defined but never used.","React Hook \"useLocation\" is called in function \"worker_lowerlistItems\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'reviewingBadgeContent' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'userName' is assigned a value but never used.","Imported JSX component ReviewingCertificate_component must be in PascalCase or SCREAMING_SNAKE_CASE","'Avatar' is defined but never used.","'TextField' is defined but never used.","'schoolName' is assigned a value but never used.","'setSchoolName' is assigned a value but never used.","'fName' is assigned a value but never used.","'setfName' is assigned a value but never used.","'lName' is assigned a value but never used.","'setlName' is assigned a value but never used.","'courseName' is assigned a value but never used.","'setCourseName' is assigned a value but never used.","'finishDate' is assigned a value but never used.","'setFinishDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setSearched'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [searched, userId] as a second argument to the useEffect Hook.",["684"],"'useEffect' is defined but never used.","Imported JSX component ProblemCertificate_component must be in PascalCase or SCREAMING_SNAKE_CASE","'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Switch' is defined but never used.","'CreateCertificate_component' is defined but never used.","'schoolId' is assigned a value but never used.","'studentName' is assigned a value but never used.","'setStudentName' is assigned a value but never used.","'modified' is assigned a value but never used.","'setModified' is assigned a value but never used.","'maxWidth' is assigned a value but never used.","'setMaxWidth' is assigned a value but never used.",["685"],"'DashboardIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'PeopleIcon' is defined but never used.","Imported JSX component AuditCertificate_component must be in PascalCase or SCREAMING_SNAKE_CASE",["686"],"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","Imported JSX component ModifiedCertificate_component must be in PascalCase or SCREAMING_SNAKE_CASE",["687"],"Imported JSX component Worker_PublishedCertificate_component must be in PascalCase or SCREAMING_SNAKE_CASE","'modifyComment' is assigned a value but never used.",["688"],"Imported JSX component Admin_PublishedCertificate_component must be in PascalCase or SCREAMING_SNAKE_CASE",["689"],"'PropTypes' is defined but never used.","'IconButton' is defined but never used.","'SearchIcon' is defined but never used.","'Index_Header' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","'toolbarTitle' is assigned a value but never used.","'toolbarSecondary' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"690","fix":"691"},{"desc":"690","fix":"692"},{"desc":"690","fix":"693"},{"desc":"690","fix":"694"},{"desc":"690","fix":"695"},{"desc":"690","fix":"696"},"Add dependencies array: [searched, userId]",{"range":"697","text":"698"},{"range":"699","text":"698"},{"range":"700","text":"698"},{"range":"701","text":"698"},{"range":"702","text":"698"},{"range":"703","text":"698"},[3061,3061],", [searched, userId]",[6327,6327],[6747,6747],[6838,6838],[5537,5537],[5571,5571]]